{
  "openapi": "3.0.1",
  "info": {
    "title": "CCI Customer Portal API",
    "description": "API for managing customer workspaces, shops, and Power BI reports",
    "contact": {
      "name": "CCI Support",
      "email": "support@cci.com"
    },
    "version": "v1"
  },
  "paths": {
    "/api/Accounting/chart-of-accounts": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Get all charts of account with filtering and pagination",
        "parameters": [
          {
            "name": "SearchTerm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProgramID",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ShopID",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AccountType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsMapped",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsMasterAccount",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "MatchingStatus",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChartOfAccountResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartOfAccountResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartOfAccountResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Accounting/chart-of-accounts/{id}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Get a specific chart of account by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChartOfAccountDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartOfAccountDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartOfAccountDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Update an existing chart of account",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateChartOfAccountDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateChartOfAccountDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateChartOfAccountDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChartOfAccountDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartOfAccountDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartOfAccountDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Accounting"
        ],
        "summary": "Delete a chart of account",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Accounting/programs/{programId}/master-chart-of-accounts": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Get master chart of accounts for a program",
        "parameters": [
          {
            "name": "programId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SearchTerm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProgramID",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ShopID",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AccountType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsMapped",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsMasterAccount",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "MatchingStatus",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChartOfAccountResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartOfAccountResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartOfAccountResponseDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Create a master chart of account for a program (ShopID will be set to NULL)",
        "parameters": [
          {
            "name": "programId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateChartOfAccountDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateChartOfAccountDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateChartOfAccountDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChartOfAccountDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartOfAccountDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartOfAccountDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Accounting/programs/{programId}/master-account-types": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Get master chart of account types distribution by program",
        "parameters": [
          {
            "name": "programId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChartOfAccountAccountTypesResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartOfAccountAccountTypesResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartOfAccountAccountTypesResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Accounting/master-account-types": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Get master chart of account types distribution across all programs",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChartOfAccountAccountTypesResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartOfAccountAccountTypesResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartOfAccountAccountTypesResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Accounting/programs/{programId}/master-chart-of-accounts/import": {
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Import multiple master chart of accounts for a program (ShopID will be set to NULL for all accounts)",
        "parameters": [
          {
            "name": "programId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateChartOfAccountDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateChartOfAccountDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateChartOfAccountDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Accounting/programs/{programId}/master-chart-of-accounts/import-excel": {
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Import master chart of accounts from Excel file and store in Microsoft Fabric OneLake",
        "parameters": [
          {
            "name": "programId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "sheetName": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                },
                "sheetName": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BulkUploadResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkUploadResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkUploadResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Accounting/shops/{shopId}/programs/{programId}/chart-of-accounts": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Get shop chart of accounts for a specific shop and program",
        "parameters": [
          {
            "name": "shopId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "programId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SearchTerm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProgramID",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ShopID",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AccountType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsMapped",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsMasterAccount",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "MatchingStatus",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ShopChartOfAccountResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopChartOfAccountResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopChartOfAccountResponseDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Create a shop chart of account (ShopID and ProgramID will be set to the specified shopId and programId)",
        "parameters": [
          {
            "name": "shopId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "programId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateChartOfAccountDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateChartOfAccountDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateChartOfAccountDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChartOfAccountDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartOfAccountDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartOfAccountDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Accounting/shops/{shopId}/programs/{programId}/chart-of-accounts/import": {
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Import shop chart of accounts for a specific shop and program",
        "parameters": [
          {
            "name": "shopId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "programId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateChartOfAccountDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateChartOfAccountDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateChartOfAccountDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Accounting/shops/{shopId}/programs/{programId}/chart-of-accounts/stage-excel": {
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Stage shop chart of accounts Excel file for column mapping",
        "parameters": [
          {
            "name": "shopId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "programId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "sheetName": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                },
                "sheetName": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StagedDataResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StagedDataResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StagedDataResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Accounting/chart-of-accounts/mapping-fields": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Get available target fields for column mapping",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MappingTargetFieldDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MappingTargetFieldDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MappingTargetFieldDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Accounting/chart-of-accounts/apply-mappings": {
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Apply column mappings to staged data",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ColumnMappingRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ColumnMappingRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ColumnMappingRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ColumnMappingResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColumnMappingResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColumnMappingResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Accounting/chart-of-accounts/import-mapped/{jobId}": {
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Import mapped shop chart of accounts data",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImportMappedDataResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportMappedDataResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportMappedDataResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Accounting/chart-of-accounts/apply-mappings-and-import/{jobId}/{programId}": {
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Apply column mappings and import chart of accounts data in a single efficient operation",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "programId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ColumnMappingDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ColumnMappingDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ColumnMappingDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CombinedImportResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CombinedImportResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CombinedImportResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Accounting/chart-of-accounts/staged-data/{jobId}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Get staged data for preview and column mapping",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StagedDataResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StagedDataResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StagedDataResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Accounting/account-matchings": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Get account matchings with filtering and pagination",
        "parameters": [
          {
            "name": "ShopID",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ProgramID",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MatchingStatus",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MatchingMethod",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MinConfidence",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "MaxConfidence",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "SearchTerm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AccountMatchingResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountMatchingResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountMatchingResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Accounting/account-matchings/auto-match": {
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Perform automatic matching for shop chart of accounts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutoMatchRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AutoMatchRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AutoMatchRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AutoMatchResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutoMatchResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutoMatchResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Accounting/account-matchings/confirm": {
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Confirm or reject multiple account matchings\r\nWhen confirming, all other matches for the same shop account will be set as inactive",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmMatchingDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmMatchingDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmMatchingDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Accounting/account-matchings/reset-to-pending": {
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Reset account matchings status back to Pending\r\nThis undoes the Confirm or Reject action and restores the matching to pending state\r\nSupports both MatchingIDs (for confirmed matches) and ChartOfAccountIDs (for rejected matches)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetMatchingDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetMatchingDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResetMatchingDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Accounting/account-matchings/manual": {
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Create a manual account matching",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountMatchingDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountMatchingDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountMatchingDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AccountMatchingDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountMatchingDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountMatchingDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Accounting/account-matchings/pending": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Get pending account matches",
        "parameters": [
          {
            "name": "shopId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "programId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccountMatchingDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccountMatchingDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccountMatchingDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Accounting/shops/{shopId}/programs/{programId}/unmatched-accounts": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Get unmatched shop accounts",
        "parameters": [
          {
            "name": "shopId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "programId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChartOfAccountDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChartOfAccountDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChartOfAccountDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Accounting/shops/{shopId}/programs/{programId}/matching-statistics": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Get matching statistics for a shop and program",
        "parameters": [
          {
            "name": "shopId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "programId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AutoMatchStatisticsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutoMatchStatisticsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutoMatchStatisticsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Accounting/general-ledger": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Get general ledger entries with filtering and pagination",
        "parameters": [
          {
            "name": "ChartOfAccountsID",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ShopID",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ProgramID",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FromDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ToDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EntryType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsFinalized",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "MinAmount",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "MaxAmount",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "SearchTerm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralLedgerResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralLedgerResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralLedgerResponseDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Create a new general ledger entry",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGeneralLedgerEntryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGeneralLedgerEntryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGeneralLedgerEntryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralLedgerEntryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralLedgerEntryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralLedgerEntryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Accounting/general-ledger/{id}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Get a specific general ledger entry by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralLedgerEntryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralLedgerEntryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralLedgerEntryDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Update an existing general ledger entry",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGeneralLedgerEntryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGeneralLedgerEntryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGeneralLedgerEntryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralLedgerEntryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralLedgerEntryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralLedgerEntryDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Accounting"
        ],
        "summary": "Delete a general ledger entry",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Accounting/general-ledger/bulk": {
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Create multiple general ledger entries",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkCreateGeneralLedgerDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkCreateGeneralLedgerDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BulkCreateGeneralLedgerDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GeneralLedgerEntryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GeneralLedgerEntryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GeneralLedgerEntryDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Accounting/general-ledger/finalize": {
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Finalize general ledger entries",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinalizeGeneralLedgerDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FinalizeGeneralLedgerDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FinalizeGeneralLedgerDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Accounting/shops/{shopId}/general-ledger": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Get general ledger entries filtered by ledger date and shop ID",
        "parameters": [
          {
            "name": "shopId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "chartOfAccountId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "programId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralLedgerResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralLedgerResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralLedgerResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Accounting/chart-of-accounts/{chartOfAccountId}/balance": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Get account balance for a chart of account",
        "parameters": [
          {
            "name": "chartOfAccountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "asOfDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "number",
                  "format": "double"
                }
              },
              "application/json": {
                "schema": {
                  "type": "number",
                  "format": "double"
                }
              },
              "text/json": {
                "schema": {
                  "type": "number",
                  "format": "double"
                }
              }
            }
          }
        }
      }
    },
    "/api/Accounting/chart-of-accounts/{chartOfAccountId}/monthly-balances/{year}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Get monthly balances for a chart of account",
        "parameters": [
          {
            "name": "chartOfAccountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "number",
                    "format": "double"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "number",
                    "format": "double"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "number",
                    "format": "double"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Accounting/general-ledger/import-formats": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Get available import formats for general ledger",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GeneralLedgerImportFormatDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GeneralLedgerImportFormatDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GeneralLedgerImportFormatDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Accounting/shops/{shopId}/programs/{programId}/general-ledger/stage-excel": {
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Stage general ledger Excel file for column mapping",
        "parameters": [
          {
            "name": "shopId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "programId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "importDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "ledgerDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "sheetName": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                },
                "importDate": {
                  "style": "form"
                },
                "ledgerDate": {
                  "style": "form"
                },
                "sheetName": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StagedDataResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StagedDataResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StagedDataResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Accounting/general-ledger/mapping-fields/{importFormat}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Get available target fields for general ledger column mapping based on import format",
        "parameters": [
          {
            "name": "importFormat",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MappingTargetFieldDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MappingTargetFieldDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MappingTargetFieldDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Accounting/general-ledger/apply-mappings-and-import/{jobId}/{shopId}/{programId}": {
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Apply column mappings and import general ledger data",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "shopId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "programId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplyGeneralLedgerMappingRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplyGeneralLedgerMappingRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplyGeneralLedgerMappingRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralLedgerImportResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralLedgerImportResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralLedgerImportResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/AttributeCategory": {
      "get": {
        "tags": [
          "AttributeCategory"
        ],
        "summary": "Gets all attribute categories",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttributeCategoryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttributeCategoryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttributeCategoryDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AttributeCategory"
        ],
        "summary": "Creates a new attribute category",
        "requestBody": {
          "description": "Attribute category creation data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAttributeCategoryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAttributeCategoryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAttributeCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeCategoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeCategoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeCategoryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/AttributeCategory/{id}": {
      "get": {
        "tags": [
          "AttributeCategory"
        ],
        "summary": "Gets a specific attribute category by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Attribute category id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeCategoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeCategoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeCategoryDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AttributeCategory"
        ],
        "summary": "Updates an existing attribute category",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Attribute category id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Attribute category update data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAttributeCategoryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAttributeCategoryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAttributeCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeCategoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeCategoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeCategoryDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AttributeCategory"
        ],
        "summary": "Deletes an attribute category",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Attribute category id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/AttributeCategory/search": {
      "get": {
        "tags": [
          "AttributeCategory"
        ],
        "summary": "Searches attribute categories by description",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "description": "Search text",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttributeCategoryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttributeCategoryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttributeCategoryDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/AttributeUnit": {
      "get": {
        "tags": [
          "AttributeUnit"
        ],
        "summary": "Gets all attribute units",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttributeUnitDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttributeUnitDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttributeUnitDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AttributeUnit"
        ],
        "summary": "Creates a new attribute unit",
        "requestBody": {
          "description": "Attribute unit creation data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAttributeUnitDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAttributeUnitDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAttributeUnitDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeUnitDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeUnitDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeUnitDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/AttributeUnit/{id}": {
      "get": {
        "tags": [
          "AttributeUnit"
        ],
        "summary": "Gets a specific attribute unit by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Attribute unit id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeUnitDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeUnitDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeUnitDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AttributeUnit"
        ],
        "summary": "Updates an existing attribute unit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Attribute unit id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Attribute unit update data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAttributeUnitDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAttributeUnitDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAttributeUnitDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeUnitDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeUnitDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeUnitDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AttributeUnit"
        ],
        "summary": "Deletes an attribute unit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Attribute unit id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/AttributeUnit/search": {
      "get": {
        "tags": [
          "AttributeUnit"
        ],
        "summary": "Searches attribute units by unit type",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "description": "Search text",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttributeUnitDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttributeUnitDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttributeUnitDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Auth/change-password": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Auth/reset-password/{userId}": {
      "post": {
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Auth/dev-login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DevLoginRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DevLoginRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DevLoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Auth/impersonation": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Process impersonation token and return a valid application JWT token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImpersonationTokenRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ImpersonationTokenRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ImpersonationTokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Brand": {
      "get": {
        "tags": [
          "Brand"
        ],
        "summary": "Get all brands",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrandDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrandDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrandDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Brand"
        ],
        "summary": "Create a new brand",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BrandDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BrandDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BrandDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BrandDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrandDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrandDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Brand/{id}": {
      "get": {
        "tags": [
          "Brand"
        ],
        "summary": "Get brand by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BrandDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrandDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrandDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Brand"
        ],
        "summary": "Update an existing brand",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BrandDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BrandDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BrandDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BrandDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrandDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrandDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Brand"
        ],
        "summary": "Delete a brand",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Brand/manufacturer/{manufacturerId}": {
      "get": {
        "tags": [
          "Brand"
        ],
        "summary": "Get brands by manufacturer ID",
        "parameters": [
          {
            "name": "manufacturerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrandDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrandDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrandDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Brand/search": {
      "get": {
        "tags": [
          "Brand"
        ],
        "summary": "Search brands",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "manufacturerId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "isActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrandDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrandDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrandDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/BulkUpload/master-parts": {
      "post": {
        "tags": [
          "BulkUpload"
        ],
        "summary": "Upload and process master parts from Excel/CSV file",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "sheetName": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                },
                "sheetName": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BulkUploadResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkUploadResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkUploadResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/BulkUpload/status/{jobId}": {
      "get": {
        "tags": [
          "BulkUpload"
        ],
        "summary": "Get the status of a bulk upload job",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BulkUploadStatusDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkUploadStatusDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkUploadStatusDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/BulkUpload/jobs": {
      "get": {
        "tags": [
          "BulkUpload"
        ],
        "summary": "Get all bulk upload jobs for the current user",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BulkUploadJobDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BulkUploadJobDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BulkUploadJobDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/BulkUpload/errors/{jobId}": {
      "get": {
        "tags": [
          "BulkUpload"
        ],
        "summary": "Get errors for a specific bulk upload job",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BulkUploadErrorDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BulkUploadErrorDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BulkUploadErrorDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/BulkUpload/jobs/{jobId}": {
      "delete": {
        "tags": [
          "BulkUpload"
        ],
        "summary": "Delete a bulk upload job and its associated data",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/BulkUpload/template/master-parts": {
      "get": {
        "tags": [
          "BulkUpload"
        ],
        "summary": "Get sample template for master parts",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/BulkUpload/template/supplier-parts": {
      "get": {
        "tags": [
          "BulkUpload"
        ],
        "summary": "Get sample template for supplier parts",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/customers/{id}": {
      "get": {
        "tags": [
          "CustomerBranding"
        ],
        "summary": "Get customer details including branding information",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CustomerBranding"
        ],
        "summary": "Update customer branding information",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomerDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomerDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomerDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/customers/current": {
      "get": {
        "tags": [
          "CustomerBranding"
        ],
        "summary": "Get current customer details (for authenticated customer users)",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/customers": {
      "post": {
        "tags": [
          "CustomerBranding"
        ],
        "summary": "Create a new customer (Admin only)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/customers/{id}/logo": {
      "post": {
        "tags": [
          "CustomerBranding"
        ],
        "summary": "Upload logo image for customer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Image"
                ],
                "type": "object",
                "properties": {
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "Image": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImageUploadResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageUploadResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageUploadResponseDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CustomerBranding"
        ],
        "summary": "Delete logo image for customer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/customers/{id}/background": {
      "post": {
        "tags": [
          "CustomerBranding"
        ],
        "summary": "Upload background image for customer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Image"
                ],
                "type": "object",
                "properties": {
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "Image": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImageUploadResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageUploadResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageUploadResponseDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CustomerBranding"
        ],
        "summary": "Delete background image for customer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/customers/{id}/icon": {
      "post": {
        "tags": [
          "CustomerBranding"
        ],
        "summary": "Upload icon image for customer portal",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Image"
                ],
                "type": "object",
                "properties": {
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "Image": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImageUploadResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageUploadResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageUploadResponseDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CustomerBranding"
        ],
        "summary": "Delete icon image for customer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/customers/{id}/images/token": {
      "get": {
        "tags": [
          "CustomerBranding"
        ],
        "summary": "Generate SAS token for accessing customer images",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/customers/subdomain/{subdomain}": {
      "get": {
        "tags": [
          "CustomerBranding"
        ],
        "summary": "Get tenant branding information by subdomain for portal customization",
        "parameters": [
          {
            "name": "subdomain",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TenantBrandingResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantBrandingResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantBrandingResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/customers/health": {
      "get": {
        "tags": [
          "CustomerBranding"
        ],
        "summary": "Health check endpoint with CDN configuration",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HealthCheckResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthCheckResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthCheckResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/CustomerManagement": {
      "get": {
        "tags": [
          "CustomerManagement"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Customer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Customer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Customer"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CustomerManagement"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          }
        }
      }
    },
    "/api/CustomerManagement/{id}": {
      "get": {
        "tags": [
          "CustomerManagement"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CustomerManagement"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CustomerManagement/{id}/status": {
      "patch": {
        "tags": [
          "CustomerManagement"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "boolean"
              }
            },
            "text/json": {
              "schema": {
                "type": "boolean"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "boolean"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CustomerManagement/{customerId}/users": {
      "get": {
        "tags": [
          "CustomerManagement"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              }
            }
          }
        }
      }
    },
    "/api/Features": {
      "get": {
        "tags": [
          "Features"
        ],
        "summary": "Get all system features",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureResponseListApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureResponseListApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureResponseListApiResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Features"
        ],
        "summary": "Create a new feature",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFeatureRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFeatureRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFeatureRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureResponseApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureResponseApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureResponseApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Features/{featureId}": {
      "get": {
        "tags": [
          "Features"
        ],
        "summary": "Get feature by ID",
        "parameters": [
          {
            "name": "featureId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureResponseApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureResponseApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureResponseApiResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Features"
        ],
        "summary": "Update an existing feature",
        "parameters": [
          {
            "name": "featureId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFeatureRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFeatureRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFeatureRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureResponseApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureResponseApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureResponseApiResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Features"
        ],
        "summary": "Delete a feature (soft delete)",
        "parameters": [
          {
            "name": "featureId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Impersonation/tenants": {
      "get": {
        "tags": [
          "Impersonation"
        ],
        "summary": "Get all tenants that can be impersonated along with their admin users",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TenantWithAdminsDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TenantWithAdminsDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TenantWithAdminsDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Impersonation/generate-token": {
      "post": {
        "tags": [
          "Impersonation"
        ],
        "summary": "Generate an impersonation token for a specific tenant admin user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateImpersonationTokenRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateImpersonationTokenRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateImpersonationTokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImpersonationTokenDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImpersonationTokenDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImpersonationTokenDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Impersonation/validate-token": {
      "post": {
        "tags": [
          "Impersonation"
        ],
        "summary": "Validate an impersonation token and return info",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateImpersonationTokenRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateImpersonationTokenRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateImpersonationTokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImpersonationInfoDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImpersonationInfoDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImpersonationInfoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Impersonation/revoke-tokens/{tenantId}": {
      "post": {
        "tags": [
          "Impersonation"
        ],
        "summary": "Revoke all active impersonation tokens for a tenant",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Manufacturer": {
      "get": {
        "tags": [
          "Manufacturer"
        ],
        "summary": "Get all manufacturers",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ManufacturerDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ManufacturerDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ManufacturerDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Manufacturer"
        ],
        "summary": "Create a new manufacturer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManufacturerDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ManufacturerDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ManufacturerDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ManufacturerDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManufacturerDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManufacturerDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Manufacturer/{id}": {
      "get": {
        "tags": [
          "Manufacturer"
        ],
        "summary": "Get manufacturer by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ManufacturerDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManufacturerDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManufacturerDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Manufacturer"
        ],
        "summary": "Update an existing manufacturer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManufacturerDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ManufacturerDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ManufacturerDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ManufacturerDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManufacturerDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManufacturerDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Manufacturer"
        ],
        "summary": "Delete a manufacturer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Manufacturer/search": {
      "get": {
        "tags": [
          "Manufacturer"
        ],
        "summary": "Search manufacturers",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ManufacturerDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ManufacturerDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ManufacturerDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/MasterPart": {
      "get": {
        "tags": [
          "MasterPart"
        ],
        "summary": "Get all master parts",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MasterPartDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MasterPartDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MasterPartDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "MasterPart"
        ],
        "summary": "Create a new master part",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMasterPartDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMasterPartDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMasterPartDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MasterPartDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MasterPartDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MasterPartDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/MasterPart/{id}": {
      "get": {
        "tags": [
          "MasterPart"
        ],
        "summary": "Get master part by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MasterPartDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MasterPartDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MasterPartDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "MasterPart"
        ],
        "summary": "Update an existing master part",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMasterPartDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMasterPartDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMasterPartDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MasterPartDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MasterPartDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MasterPartDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MasterPart"
        ],
        "summary": "Delete a master part",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/MasterPart/manufacturer/{manufacturerId}": {
      "get": {
        "tags": [
          "MasterPart"
        ],
        "summary": "Get parts by manufacturer ID",
        "parameters": [
          {
            "name": "manufacturerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MasterPartDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MasterPartDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MasterPartDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/MasterPart/brand/{brandId}": {
      "get": {
        "tags": [
          "MasterPart"
        ],
        "summary": "Get parts by brand ID",
        "parameters": [
          {
            "name": "brandId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MasterPartDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MasterPartDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MasterPartDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/MasterPart/search": {
      "get": {
        "tags": [
          "MasterPart"
        ],
        "summary": "Search master parts",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "manufacturerId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "brandId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "partCategoryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MasterPartDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MasterPartDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MasterPartDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/PartCategory": {
      "get": {
        "tags": [
          "PartCategory"
        ],
        "summary": "Get all part categories",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PartCategoryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PartCategoryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PartCategoryDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PartCategory"
        ],
        "summary": "Create a new part category",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartCategoryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PartCategoryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PartCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PartCategoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartCategoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartCategoryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/PartCategory/{id}": {
      "get": {
        "tags": [
          "PartCategory"
        ],
        "summary": "Get part category by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PartCategoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartCategoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartCategoryDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PartCategory"
        ],
        "summary": "Update an existing part category",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartCategoryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PartCategoryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PartCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PartCategoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartCategoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartCategoryDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PartCategory"
        ],
        "summary": "Delete a part category",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/PartCategory/search": {
      "get": {
        "tags": [
          "PartCategory"
        ],
        "summary": "Search part categories",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PartCategoryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PartCategoryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PartCategoryDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/PartsMatch": {
      "get": {
        "tags": [
          "PartsMatch"
        ],
        "summary": "Get parts matches with filtering and pagination",
        "parameters": [
          {
            "name": "Status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MatchType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Confidence",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsManual",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CreatedBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ReviewedBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "CreatedTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ReviewedFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ReviewedTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "MinScore",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "MaxScore",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortDirection",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PartsMatchPagedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartsMatchPagedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartsMatchPagedResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/PartsMatch/{id}": {
      "get": {
        "tags": [
          "PartsMatch"
        ],
        "summary": "Get a specific parts match by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Parts match ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PartsMatchDetailDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartsMatchDetailDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartsMatchDetailDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PartsMatch"
        ],
        "summary": "Update a parts match",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Parts match ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Update data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMatchRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMatchRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMatchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PartsMatchDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartsMatchDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartsMatchDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PartsMatch"
        ],
        "summary": "Delete a parts match",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Parts match ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/PartsMatch/manual": {
      "post": {
        "tags": [
          "PartsMatch"
        ],
        "summary": "Create a manual match between parts",
        "requestBody": {
          "description": "Manual match data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateManualMatchRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateManualMatchRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateManualMatchRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PartsMatchDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartsMatchDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartsMatchDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/PartsMatch/approve": {
      "post": {
        "tags": [
          "PartsMatch"
        ],
        "summary": "Approve a parts match",
        "requestBody": {
          "description": "Approval data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApproveMatchRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApproveMatchRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApproveMatchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PartsMatchDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartsMatchDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartsMatchDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/PartsMatch/reject": {
      "post": {
        "tags": [
          "PartsMatch"
        ],
        "summary": "Reject a parts match",
        "requestBody": {
          "description": "Rejection data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RejectMatchRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RejectMatchRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RejectMatchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PartsMatchDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartsMatchDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartsMatchDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/PartsMatch/summary": {
      "get": {
        "tags": [
          "PartsMatch"
        ],
        "summary": "Get matching summary statistics",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PartsMatchSummaryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartsMatchSummaryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartsMatchSummaryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/PartsMatch/bulk-action": {
      "post": {
        "tags": [
          "PartsMatch"
        ],
        "summary": "Perform bulk actions on multiple matches",
        "requestBody": {
          "description": "Bulk action data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkMatchActionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkMatchActionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BulkMatchActionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PartsMatchDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PartsMatchDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PartsMatchDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/PartsMatch/potential/{variantPartId}": {
      "get": {
        "tags": [
          "PartsMatch"
        ],
        "summary": "Find potential matches for a variant part",
        "parameters": [
          {
            "name": "variantPartId",
            "in": "path",
            "description": "Variant part ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of matches to return (default: 5, max: 20)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 5
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PartsMatchDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PartsMatchDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PartsMatchDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/PartsMatch/auto": {
      "post": {
        "tags": [
          "PartsMatch"
        ],
        "summary": "Create an automatic match between parts",
        "requestBody": {
          "description": "Auto match data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutoMatchRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AutoMatchRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AutoMatchRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PartsMatchDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartsMatchDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartsMatchDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/PartsMatch/by-status/{status}": {
      "get": {
        "tags": [
          "PartsMatch"
        ],
        "summary": "Get matches by status",
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "description": "Match status",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number (default: 1)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size (default: 20, max: 100)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PartsMatchPagedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartsMatchPagedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartsMatchPagedResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Permission": {
      "get": {
        "tags": [
          "Permission"
        ],
        "summary": "Gets all available permissions in the system",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PermissionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PermissionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PermissionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Permission/{id}": {
      "get": {
        "tags": [
          "Permission"
        ],
        "summary": "Gets a specific permission by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Permission id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Program": {
      "get": {
        "tags": [
          "Program"
        ],
        "summary": "Get all programs visible to the current user",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProgramDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProgramDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProgramDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Program"
        ],
        "summary": "Create a new program",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProgramDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProgramDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProgramDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Program/{id}": {
      "get": {
        "tags": [
          "Program"
        ],
        "summary": "Get a specific program by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Program"
        ],
        "summary": "Update an existing program",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProgramDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProgramDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProgramDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Program"
        ],
        "summary": "Delete a program",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Program/search": {
      "get": {
        "tags": [
          "Program"
        ],
        "summary": "Search programs with filters",
        "parameters": [
          {
            "name": "searchTerm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "isActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProgramDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProgramDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProgramDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Program/shop/{shopId}": {
      "get": {
        "tags": [
          "Program"
        ],
        "summary": "Get program subscriptions for a specific shop",
        "parameters": [
          {
            "name": "shopId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProgramShopSubscriptionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProgramShopSubscriptionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProgramShopSubscriptionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Program/type/{programTypeId}": {
      "get": {
        "tags": [
          "Program"
        ],
        "summary": "Get programs by type ID",
        "parameters": [
          {
            "name": "programTypeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProgramDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProgramDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProgramDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Program/{id}/active": {
      "patch": {
        "tags": [
          "Program"
        ],
        "summary": "Toggle program active status - behavior depends on user role and tenant context\r\nCS users: Updates Program.IsActive\r\nTenant users: Updates CustomerPrograms.IsActive for their tenant",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ToggleProgramActiveStatusDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ToggleProgramActiveStatusDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ToggleProgramActiveStatusDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Program/{programId}/assign/customer": {
      "post": {
        "tags": [
          "Program"
        ],
        "summary": "Assign a program to a customer",
        "parameters": [
          {
            "name": "programId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerProgramsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerProgramsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerProgramsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerProgramsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerProgramsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerProgramsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Program/{programId}/assign/customer/{assignmentId}": {
      "delete": {
        "tags": [
          "Program"
        ],
        "summary": "Remove a program assignment from a customer",
        "parameters": [
          {
            "name": "programId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "assignmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Program/{programId}/assign/shop": {
      "post": {
        "tags": [
          "Program"
        ],
        "summary": "Assign a program to a shop",
        "parameters": [
          {
            "name": "programId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProgramShopSubscriptionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProgramShopSubscriptionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProgramShopSubscriptionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramShopSubscriptionDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramShopSubscriptionDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramShopSubscriptionDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Program/{programId}/assign/shop/{shopsubscriptionId}": {
      "put": {
        "tags": [
          "Program"
        ],
        "summary": "Update an existing program shop subscription",
        "parameters": [
          {
            "name": "programId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "shopsubscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProgramShopSubscriptiontDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProgramShopSubscriptiontDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProgramShopSubscriptiontDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramShopSubscriptionDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramShopSubscriptionDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramShopSubscriptionDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Program"
        ],
        "summary": "Remove a program subscription from a shop",
        "parameters": [
          {
            "name": "programId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "shopsubscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Program/assignment/{assignmentId}": {
      "get": {
        "tags": [
          "Program"
        ],
        "summary": "Get a specific program assignment",
        "parameters": [
          {
            "name": "assignmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerProgramsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerProgramsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerProgramsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Program/shop-subscription/{shopsubscriptionId}": {
      "get": {
        "tags": [
          "Program"
        ],
        "summary": "Get a specific program shop subscription",
        "parameters": [
          {
            "name": "shopsubscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramShopSubscriptionDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramShopSubscriptionDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramShopSubscriptionDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Program/{programId}/assign/customers": {
      "post": {
        "tags": [
          "Program"
        ],
        "summary": "Assign multiple customers to a program",
        "parameters": [
          {
            "name": "programId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMultipleCustomerProgramsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMultipleCustomerProgramsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMultipleCustomerProgramsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerProgramsDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerProgramsDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerProgramsDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Program/{programId}/assign/shops": {
      "post": {
        "tags": [
          "Program"
        ],
        "summary": "Assign multiple shops to a program",
        "parameters": [
          {
            "name": "programId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMultipleProgramShopSubscriptionsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMultipleProgramShopSubscriptionsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMultipleProgramShopSubscriptionsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProgramShopSubscriptionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProgramShopSubscriptionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProgramShopSubscriptionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ProgramCategory": {
      "get": {
        "tags": [
          "ProgramCategory"
        ],
        "summary": "Get all program categories",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProgramCategoryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProgramCategoryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProgramCategoryDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ProgramCategory"
        ],
        "summary": "Create a new program category",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProgramCategoryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProgramCategoryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProgramCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramCategoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramCategoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramCategoryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/ProgramCategory/{id}": {
      "get": {
        "tags": [
          "ProgramCategory"
        ],
        "summary": "Get a specific program category by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramCategoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramCategoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramCategoryDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProgramCategory"
        ],
        "summary": "Update an existing program category",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProgramCategoryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProgramCategoryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProgramCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramCategoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramCategoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramCategoryDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProgramCategory"
        ],
        "summary": "Delete a program category",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/ProgramCategory/search": {
      "get": {
        "tags": [
          "ProgramCategory"
        ],
        "summary": "Search program categories with optional filters",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProgramCategoryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProgramCategoryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProgramCategoryDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ProgramType": {
      "get": {
        "tags": [
          "ProgramType"
        ],
        "summary": "Get all program types",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProgramTypeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProgramTypeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProgramTypeDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ProgramType"
        ],
        "summary": "Create a new program type",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProgramTypeDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProgramTypeDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProgramTypeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramTypeDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramTypeDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramTypeDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/ProgramType/{id}": {
      "get": {
        "tags": [
          "ProgramType"
        ],
        "summary": "Get a specific program type by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramTypeDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramTypeDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramTypeDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProgramType"
        ],
        "summary": "Update an existing program type",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProgramTypeDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProgramTypeDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProgramTypeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramTypeDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramTypeDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramTypeDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProgramType"
        ],
        "summary": "Delete a program type",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/ProgramType/{id}/attributes": {
      "get": {
        "tags": [
          "ProgramType"
        ],
        "summary": "Get all attributes for a program type",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProgramTypeAttributeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProgramTypeAttributeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProgramTypeAttributeDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ProgramType"
        ],
        "summary": "Add an attribute to a program type",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProgramTypeAttributeDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProgramTypeAttributeDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProgramTypeAttributeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramTypeAttributeDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramTypeAttributeDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramTypeAttributeDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/ProgramType/{programTypeId}/attributes/{attributeId}": {
      "put": {
        "tags": [
          "ProgramType"
        ],
        "summary": "Update a program type attribute",
        "parameters": [
          {
            "name": "programTypeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "attributeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProgramTypeAttributeDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProgramTypeAttributeDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProgramTypeAttributeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramTypeAttributeDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramTypeAttributeDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramTypeAttributeDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProgramType"
        ],
        "summary": "Remove an attribute from a program type",
        "parameters": [
          {
            "name": "programTypeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "attributeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Report": {
      "get": {
        "tags": [
          "Report"
        ],
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workspaceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReportDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReportDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReportDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Report"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Report/{id}": {
      "get": {
        "tags": [
          "Report"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Report"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Report"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Report/{id}/embed-config": {
      "get": {
        "tags": [
          "Report"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PowerBiConfigDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PowerBiConfigDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PowerBiConfigDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Report/bulk/approve": {
      "post": {
        "tags": [
          "Report"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApproveReportsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApproveReportsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApproveReportsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Report/bulk/set-status": {
      "post": {
        "tags": [
          "Report"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetReportStatusRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetReportStatusRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetReportStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Report/bulk/change-category": {
      "post": {
        "tags": [
          "Report"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeCategoryRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeCategoryRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeCategoryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Report/{id}/assign-roles": {
      "post": {
        "tags": [
          "Report"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Report/{id}/assign-users": {
      "post": {
        "tags": [
          "Report"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Report/bulk/assign-reports-to-user": {
      "post": {
        "tags": [
          "Report"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignReportsToUserRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignReportsToUserRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssignReportsToUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Report/category-accessible": {
      "get": {
        "tags": [
          "Report"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReportDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReportDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReportDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Report/{id}/check-category-access": {
      "get": {
        "tags": [
          "Report"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/Report/{id}/customer-settings": {
      "get": {
        "tags": [
          "Report"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerReportDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerReportDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerReportDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Report"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomerReportDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomerReportDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomerReportDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerReportDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerReportDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerReportDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Report"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Report/customer-settings": {
      "get": {
        "tags": [
          "Report"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerReportDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerReportDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerReportDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Report/{id}/toggle-enabled": {
      "put": {
        "tags": [
          "Report"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ToggleEnabledRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ToggleEnabledRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ToggleEnabledRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/report-categories": {
      "get": {
        "tags": [
          "ReportCategory"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReportCategoryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReportCategoryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReportCategoryDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ReportCategory"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportCategoryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportCategoryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportCategoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportCategoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportCategoryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/report-categories/{id}": {
      "get": {
        "tags": [
          "ReportCategory"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportCategoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportCategoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportCategoryDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ReportCategory"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportCategoryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportCategoryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportCategoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportCategoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportCategoryDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ReportCategory"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/report-categories/{id}/set-default": {
      "put": {
        "tags": [
          "ReportCategory"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportCategoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportCategoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportCategoryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/report-categories/{id}/assign-roles": {
      "put": {
        "tags": [
          "ReportCategory"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/report-categories/{id}/assign-users": {
      "put": {
        "tags": [
          "ReportCategory"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/ReportImportLog": {
      "get": {
        "tags": [
          "ReportImportLog"
        ],
        "summary": "Get report import logs for the current tenant/customer",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number (default: 1)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size (default: 20, max: 100)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportImportLogResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportImportLogResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportImportLogResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/ReportImportLog/{id}": {
      "get": {
        "tags": [
          "ReportImportLog"
        ],
        "summary": "Get a specific report import log by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The import log ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportImportSummaryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportImportSummaryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportImportSummaryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Role": {
      "get": {
        "tags": [
          "Role"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Role"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoleDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoleDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Role/{id}": {
      "get": {
        "tags": [
          "Role"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Role"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRoleDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRoleDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRoleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Role"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Role/{id}/assign-users": {
      "post": {
        "tags": [
          "Role"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignUsersToRoleDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignUsersToRoleDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssignUsersToRoleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Role/{id}/remove-users": {
      "post": {
        "tags": [
          "Role"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignUsersToRoleDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignUsersToRoleDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssignUsersToRoleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Role/{id}/assign-reports": {
      "post": {
        "tags": [
          "Role"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignReportsToRoleDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignReportsToRoleDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssignReportsToRoleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Role/{id}/remove-reports": {
      "post": {
        "tags": [
          "Role"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignReportsToRoleDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignReportsToRoleDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssignReportsToRoleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Role/{id}/assign-shops": {
      "post": {
        "tags": [
          "Role"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignShopsToRoleDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignShopsToRoleDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssignShopsToRoleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Role/{id}/remove-shops": {
      "post": {
        "tags": [
          "Role"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignShopsToRoleDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignShopsToRoleDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssignShopsToRoleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Role/{id}/permissions": {
      "get": {
        "tags": [
          "Role"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Role/{id}/users": {
      "get": {
        "tags": [
          "Role"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Role/debug": {
      "get": {
        "tags": [
          "Role"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Shop": {
      "get": {
        "tags": [
          "Shop"
        ],
        "parameters": [
          {
            "name": "SearchText",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "City",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "State",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Program",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ShopSearchResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopSearchResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopSearchResponseDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Shop"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ShopDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ShopDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Shop/{id}": {
      "get": {
        "tags": [
          "Shop"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ShopDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Shop"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ShopDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ShopDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Shop"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Shop/program/{programId}": {
      "get": {
        "tags": [
          "Shop"
        ],
        "parameters": [
          {
            "name": "programId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Shop/{id}/activate": {
      "post": {
        "tags": [
          "Shop"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Shop/{id}/deactivate": {
      "post": {
        "tags": [
          "Shop"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Shop/{id}/programs": {
      "post": {
        "tags": [
          "Shop"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignProgramsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignProgramsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssignProgramsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Shop/{id}/users": {
      "post": {
        "tags": [
          "Shop"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignUsersRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignUsersRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssignUsersRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Shop/bulk/assign-shops-to-user": {
      "post": {
        "tags": [
          "Shop"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignShopsToUserRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignShopsToUserRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssignShopsToUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Shop/{id}/kpis": {
      "get": {
        "tags": [
          "Shop"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopKpiDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopKpiDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopKpiDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ShopAttribute": {
      "get": {
        "tags": [
          "ShopAttribute"
        ],
        "summary": "Gets all shop attributes",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopAttributeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopAttributeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopAttributeDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ShopAttribute"
        ],
        "summary": "Creates a new shop attribute",
        "requestBody": {
          "description": "Shop attribute creation data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateShopAttributeDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateShopAttributeDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateShopAttributeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ShopAttributeDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopAttributeDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopAttributeDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/ShopAttribute/{id}": {
      "get": {
        "tags": [
          "ShopAttribute"
        ],
        "summary": "Gets a specific shop attribute by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Shop attribute id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ShopAttributeDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopAttributeDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopAttributeDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ShopAttribute"
        ],
        "summary": "Updates an existing shop attribute",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Shop attribute id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Shop attribute update data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateShopAttributeDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateShopAttributeDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateShopAttributeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ShopAttributeDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopAttributeDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopAttributeDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ShopAttribute"
        ],
        "summary": "Deletes a shop attribute",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Shop attribute id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/ShopAttribute/category/{categoryId}": {
      "get": {
        "tags": [
          "ShopAttribute"
        ],
        "summary": "Gets shop attributes by category id",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "Attribute category id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopAttributeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopAttributeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopAttributeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ShopAttribute/search": {
      "get": {
        "tags": [
          "ShopAttribute"
        ],
        "summary": "Searches shop attributes by name, type, or category",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "description": "Search text",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopAttributeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopAttributeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopAttributeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ShopKpi/shop/{shopId}": {
      "get": {
        "tags": [
          "ShopKpi"
        ],
        "summary": "Get all KPIs for a specific shop",
        "parameters": [
          {
            "name": "shopId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopKpiDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopKpiDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopKpiDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ShopKpi/{id}": {
      "get": {
        "tags": [
          "ShopKpi"
        ],
        "summary": "Get a specific KPI by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ShopKpiDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopKpiDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopKpiDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ShopKpi"
        ],
        "summary": "Update an existing KPI",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateShopKpiDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateShopKpiDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateShopKpiDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ShopKpiDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopKpiDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopKpiDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ShopKpi"
        ],
        "summary": "Delete a KPI",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/ShopKpi": {
      "post": {
        "tags": [
          "ShopKpi"
        ],
        "summary": "Create a new KPI",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateShopKpiDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateShopKpiDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateShopKpiDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ShopKpiDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopKpiDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopKpiDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/ShopKpi/attribute/{shopAttributeId}": {
      "get": {
        "tags": [
          "ShopKpi"
        ],
        "summary": "Get all KPIs for a specific shop attribute across all shops",
        "parameters": [
          {
            "name": "shopAttributeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopKpiDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopKpiDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopKpiDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ShopKpi/shop/{shopId}/year/{year}": {
      "get": {
        "tags": [
          "ShopKpi"
        ],
        "summary": "Get KPIs for a specific shop by year and optionally month",
        "parameters": [
          {
            "name": "shopId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "month",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopKpiDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopKpiDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopKpiDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ShopKpi/bulk-update": {
      "patch": {
        "tags": [
          "ShopKpi"
        ],
        "summary": "Bulk update KPI values for multiple shop KPIs",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkUpdateShopKpiDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkUpdateShopKpiDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BulkUpdateShopKpiDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopKpiDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopKpiDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopKpiDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ShopKpi/shop/{shopId}/recent": {
      "get": {
        "tags": [
          "ShopKpi"
        ],
        "summary": "Get recent KPI view data for a specific shop",
        "parameters": [
          {
            "name": "shopId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopKpiRecentViewDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopKpiRecentViewDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopKpiRecentViewDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ShopProperties/shop/{shopId}": {
      "get": {
        "tags": [
          "ShopProperties"
        ],
        "summary": "Get all properties for a specific shop",
        "parameters": [
          {
            "name": "shopId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopPropertiesDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopPropertiesDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopPropertiesDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ShopProperties/{id}": {
      "get": {
        "tags": [
          "ShopProperties"
        ],
        "summary": "Get a specific property by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ShopPropertiesDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopPropertiesDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopPropertiesDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ShopProperties"
        ],
        "summary": "Update an existing shop property",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateShopPropertiesDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateShopPropertiesDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateShopPropertiesDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ShopPropertiesDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopPropertiesDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopPropertiesDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ShopProperties"
        ],
        "summary": "Delete a shop property",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/ShopProperties": {
      "post": {
        "tags": [
          "ShopProperties"
        ],
        "summary": "Create a new shop property",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateShopPropertiesDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateShopPropertiesDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateShopPropertiesDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ShopPropertiesDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopPropertiesDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopPropertiesDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/ShopProperties/attribute/{shopAttributeId}": {
      "get": {
        "tags": [
          "ShopProperties"
        ],
        "summary": "Get properties by shop attribute",
        "parameters": [
          {
            "name": "shopAttributeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopPropertiesDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopPropertiesDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopPropertiesDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ShopProperties/shop/{shopId}/year/{year}": {
      "get": {
        "tags": [
          "ShopProperties"
        ],
        "summary": "Get properties by year and optionally by month for a specific shop",
        "parameters": [
          {
            "name": "shopId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "month",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopPropertiesDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopPropertiesDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopPropertiesDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ShopProperties/bulk-update": {
      "patch": {
        "tags": [
          "ShopProperties"
        ],
        "summary": "Bulk update property values for multiple shop properties",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkUpdateShopPropertiesDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkUpdateShopPropertiesDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BulkUpdateShopPropertiesDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopPropertiesDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopPropertiesDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopPropertiesDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ShopStats": {
      "get": {
        "tags": [
          "ShopStats"
        ],
        "summary": "Get shop statistics with optional filtering",
        "parameters": [
          {
            "name": "shopId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "make",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopStatsDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopStatsDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopStatsDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ShopStats"
        ],
        "summary": "Create new shop statistics",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateShopStatsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateShopStatsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateShopStatsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ShopStatsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopStatsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopStatsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/ShopStats/{id}": {
      "get": {
        "tags": [
          "ShopStats"
        ],
        "summary": "Get shop statistics by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ShopStatsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopStatsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopStatsDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ShopStats"
        ],
        "summary": "Update existing shop statistics",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateShopStatsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateShopStatsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateShopStatsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ShopStatsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopStatsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopStatsDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ShopStats"
        ],
        "summary": "Delete shop statistics",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/ShopStats/dashboard/summary": {
      "get": {
        "tags": [
          "ShopStats"
        ],
        "summary": "Get dashboard summary with aggregated statistics",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardSummaryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardSummaryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardSummaryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/ShopStats/dashboard/shops": {
      "get": {
        "tags": [
          "ShopStats"
        ],
        "summary": "Get shop dashboard statistics for all shops",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopDashboardStatsDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopDashboardStatsDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopDashboardStatsDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ShopStats/dashboard/shops/{shopId}": {
      "get": {
        "tags": [
          "ShopStats"
        ],
        "summary": "Get dashboard statistics for a specific shop",
        "parameters": [
          {
            "name": "shopId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ShopDashboardStatsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopDashboardStatsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopDashboardStatsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/ShopStats/trends": {
      "get": {
        "tags": [
          "ShopStats"
        ],
        "summary": "Get trend data for charts and analytics",
        "parameters": [
          {
            "name": "shopId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TrendDataDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TrendDataDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TrendDataDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ShopStats/top-performers": {
      "get": {
        "tags": [
          "ShopStats"
        ],
        "summary": "Get top performing shops by various metrics",
        "parameters": [
          {
            "name": "metricType",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "revenue"
            }
          },
          {
            "name": "take",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TopPerformersDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TopPerformersDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TopPerformersDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Subscription": {
      "get": {
        "tags": [
          "Subscription"
        ],
        "summary": "Get all subscriptions for the current tenant",
        "parameters": [
          {
            "name": "tenantId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Subscription"
        ],
        "summary": "Create a new subscription",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubscriptionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubscriptionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubscriptionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Subscription/{id}": {
      "get": {
        "tags": [
          "Subscription"
        ],
        "summary": "Get subscription by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Subscription"
        ],
        "summary": "Update an existing subscription",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSubscriptionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSubscriptionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSubscriptionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Subscription"
        ],
        "summary": "Delete a subscription",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Subscription/{id}/activate": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "summary": "Activate a subscription",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Subscription/{id}/deactivate": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "summary": "Deactivate a subscription",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Subscription/{id}/clone": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "summary": "Clone a subscription with a new name",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloneSubscriptionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CloneSubscriptionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CloneSubscriptionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Subscription/{id}/execute": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "summary": "Execute a subscription manually",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Subscription/{id}/executions": {
      "get": {
        "tags": [
          "Subscription"
        ],
        "summary": "Get execution history for a subscription",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "take",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionExecutionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionExecutionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionExecutionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Subscription/stats": {
      "get": {
        "tags": [
          "Subscription"
        ],
        "summary": "Get subscription statistics for the current tenant",
        "parameters": [
          {
            "name": "tenantId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Subscription/active-for-execution": {
      "get": {
        "tags": [
          "Subscription"
        ],
        "summary": "Get active subscriptions scheduled for execution (for background processing)",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-features": {
      "get": {
        "tags": [
          "TenantFeatures"
        ],
        "summary": "Get all tenant features with detailed status information",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TenantFeatureResponseListApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantFeatureResponseListApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantFeatureResponseListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-features/enabled": {
      "get": {
        "tags": [
          "TenantFeatures"
        ],
        "summary": "Get enabled feature keys for current tenant (optimized for frontend checks)",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringListApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringListApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-features/{featureKey}/enabled": {
      "get": {
        "tags": [
          "TenantFeatures"
        ],
        "summary": "Check if a specific feature is enabled for current tenant",
        "parameters": [
          {
            "name": "featureKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-features/tenant/{tenantId}": {
      "get": {
        "tags": [
          "TenantFeatures"
        ],
        "summary": "Get tenant features for a specific tenant (admin only)",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TenantFeatureResponseListApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantFeatureResponseListApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantFeatureResponseListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-features/tenant/{tenantId}/features/{featureId}/enable": {
      "post": {
        "tags": [
          "TenantFeatures"
        ],
        "summary": "Enable a feature for a tenant (admin only)",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "featureId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TenantFeatureResponseApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantFeatureResponseApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantFeatureResponseApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-features/tenant/{tenantId}/features/{featureId}/disable": {
      "post": {
        "tags": [
          "TenantFeatures"
        ],
        "summary": "Disable a feature for a tenant (admin only)",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "featureId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-features/tenant/{tenantId}/features/bulk": {
      "post": {
        "tags": [
          "TenantFeatures"
        ],
        "summary": "Bulk enable/disable features for a tenant (admin only)",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkUpdateTenantFeaturesRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkUpdateTenantFeaturesRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BulkUpdateTenantFeaturesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-features/tenant/{tenantId}/initialize": {
      "post": {
        "tags": [
          "TenantFeatures"
        ],
        "summary": "Initialize features for a new tenant (admin only)",
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/User": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "isCustomerUser",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isCCIUser",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/User/search": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "searchTerm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/User/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/User/{id}/customers/{customerId}": {
      "post": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/User/test-debug": {
      "get": {
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/UserReportFavorite": {
      "get": {
        "tags": [
          "UserReportFavorite"
        ],
        "summary": "Get all favorite reports for the current user",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserFavoriteReportsResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserFavoriteReportsResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserFavoriteReportsResponseDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "UserReportFavorite"
        ],
        "summary": "Add a report to current user's favorites",
        "requestBody": {
          "description": "The favorite report data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserReportFavoriteDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserReportFavoriteDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserReportFavoriteDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/UserReportFavorite/user/{userId}": {
      "get": {
        "tags": [
          "UserReportFavorite"
        ],
        "summary": "Get favorite reports for a specific user (admin only)",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserFavoriteReportsResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserFavoriteReportsResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserFavoriteReportsResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/UserReportFavorite/{reportId}": {
      "delete": {
        "tags": [
          "UserReportFavorite"
        ],
        "summary": "Remove a report from current user's favorites",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "The report ID to remove",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "UserReportFavorite"
        ],
        "summary": "Update a favorite report's note",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "The report ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The update data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserReportFavoriteDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserReportFavoriteDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserReportFavoriteDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/UserReportFavorite/{reportId}/is-favorited": {
      "get": {
        "tags": [
          "UserReportFavorite"
        ],
        "summary": "Check if a report is favorited by the current user",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "The report ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/VariantParts": {
      "get": {
        "tags": [
          "VariantParts"
        ],
        "summary": "Get variant parts with filtering and pagination",
        "parameters": [
          {
            "name": "DistPartNum",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Manufacturer",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Category",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DistributorName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MatchStatus",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CreatedFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "CreatedTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IsActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortDirection",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/VariantPartPagedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VariantPartPagedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VariantPartPagedResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "VariantParts"
        ],
        "summary": "Create a new variant part",
        "requestBody": {
          "description": "Variant part data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VariantPartRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VariantPartRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VariantPartRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/VariantPartDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VariantPartDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VariantPartDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/VariantParts/{id}": {
      "get": {
        "tags": [
          "VariantParts"
        ],
        "summary": "Get a specific variant part by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Variant part ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/VariantPartWithMatchDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VariantPartWithMatchDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VariantPartWithMatchDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "VariantParts"
        ],
        "summary": "Update an existing variant part",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Variant part ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Updated variant part data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VariantPartRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VariantPartRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VariantPartRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/VariantPartDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VariantPartDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VariantPartDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "VariantParts"
        ],
        "summary": "Delete a variant part",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Variant part ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/VariantParts/unmatched": {
      "get": {
        "tags": [
          "VariantParts"
        ],
        "summary": "Get unmatched variant parts",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number (default: 1)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size (default: 20, max: 100)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/VariantPartPagedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VariantPartPagedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VariantPartPagedResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/VariantParts/search": {
      "get": {
        "tags": [
          "VariantParts"
        ],
        "summary": "Search variant parts",
        "parameters": [
          {
            "name": "searchTerm",
            "in": "query",
            "description": "Search term",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number (default: 1)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size (default: 20, max: 100)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/VariantPartPagedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VariantPartPagedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VariantPartPagedResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/VariantParts/statistics": {
      "get": {
        "tags": [
          "VariantParts"
        ],
        "summary": "Get variant parts statistics",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          }
        }
      }
    },
    "/api/VariantParts/bulk-import": {
      "post": {
        "tags": [
          "VariantParts"
        ],
        "summary": "Bulk import variant parts",
        "requestBody": {
          "description": "List of variant parts to import",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VariantPartRequest"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VariantPartRequest"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VariantPartRequest"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Workspace": {
      "get": {
        "tags": [
          "Workspace"
        ],
        "parameters": [
          {
            "name": "includeReports",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkspaceDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkspaceDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkspaceDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Workspace"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Workspace/{id}": {
      "get": {
        "tags": [
          "Workspace"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Workspace"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Workspace"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Workspace/{id}/users/{userId}": {
      "post": {
        "tags": [
          "Workspace"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Workspace"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "Workspace"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/Workspace/{workspaceId}/customers": {
      "post": {
        "tags": [
          "Workspace"
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignWorkspaceToCustomersDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignWorkspaceToCustomersDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssignWorkspaceToCustomersDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Workspace/{id}/name": {
      "put": {
        "tags": [
          "Workspace"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTenantWorkspaceNameDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTenantWorkspaceNameDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTenantWorkspaceNameDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Workspace/assignments": {
      "get": {
        "tags": [
          "Workspace"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerWorkspaceDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerWorkspaceDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerWorkspaceDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Workspace/{workspaceId}/customers/{customerId}/nameandstatus": {
      "put": {
        "tags": [
          "Workspace"
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomerWorkspaceNameAndStatusDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomerWorkspaceNameAndStatusDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomerWorkspaceNameAndStatusDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Workspace/{workspaceId}/roles/{roleId}": {
      "post": {
        "tags": [
          "Workspace"
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Workspace"
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "Workspace"
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/Workspace/{workspaceId}/roles": {
      "get": {
        "tags": [
          "Workspace"
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Workspace/roles/{roleId}/workspaces": {
      "get": {
        "tags": [
          "Workspace"
        ],
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkspaceDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkspaceDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkspaceDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Workspace/{workspaceId}/import-reports": {
      "post": {
        "tags": [
          "Workspace"
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImportReportsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportReportsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportReportsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Workspace/{workspaceId}/powerbi-reports": {
      "get": {
        "tags": [
          "Workspace"
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PowerBiReportDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PowerBiReportDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PowerBiReportDto"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccountMatchingDto": {
        "type": "object",
        "properties": {
          "matchingID": {
            "type": "integer",
            "format": "int32"
          },
          "shopChartOfAccountID": {
            "type": "integer",
            "format": "int32"
          },
          "masterChartOfAccountID": {
            "type": "integer",
            "format": "int32"
          },
          "tenantID": {
            "type": "integer",
            "format": "int32"
          },
          "matchingConfidence": {
            "type": "number",
            "format": "double"
          },
          "matchingMethod": {
            "type": "string",
            "nullable": true
          },
          "matchingStatus": {
            "type": "string",
            "nullable": true
          },
          "matchingDetails": {
            "type": "string",
            "nullable": true
          },
          "reviewedBy": {
            "type": "string",
            "nullable": true
          },
          "reviewedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "shopAccountName": {
            "type": "string",
            "nullable": true
          },
          "shopAccountNumber": {
            "type": "string",
            "nullable": true
          },
          "masterAccountName": {
            "type": "string",
            "nullable": true
          },
          "masterAccountNumber": {
            "type": "string",
            "nullable": true
          },
          "shopName": {
            "type": "string",
            "nullable": true
          },
          "tenantName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AccountMatchingResponseDto": {
        "type": "object",
        "properties": {
          "matches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountMatchingDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApiError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "details": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationRole": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "normalizedName": {
            "type": "string",
            "nullable": true
          },
          "concurrencyStamp": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tenant": {
            "$ref": "#/components/schemas/Customer"
          },
          "rolePermissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RolePermission"
            },
            "nullable": true
          },
          "roleWorkspaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleWorkspace"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "normalizedUserName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "normalizedEmail": {
            "type": "string",
            "nullable": true
          },
          "emailConfirmed": {
            "type": "boolean"
          },
          "passwordHash": {
            "type": "string",
            "nullable": true
          },
          "securityStamp": {
            "type": "string",
            "nullable": true
          },
          "concurrencyStamp": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "phoneNumberConfirmed": {
            "type": "boolean"
          },
          "twoFactorEnabled": {
            "type": "boolean"
          },
          "lockoutEnd": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lockoutEnabled": {
            "type": "boolean"
          },
          "accessFailedCount": {
            "type": "integer",
            "format": "int32"
          },
          "isCustomerUser": {
            "type": "boolean"
          },
          "isCCIUser": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastLoginAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "customerUsers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerUser"
            },
            "nullable": true
          },
          "userWorkspaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserWorkspace"
            },
            "nullable": true
          },
          "favoriteReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserReportFavorite"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplyGeneralLedgerMappingRequestDto": {
        "type": "object",
        "properties": {
          "jobID": {
            "type": "integer",
            "format": "int32"
          },
          "shopID": {
            "type": "integer",
            "format": "int32"
          },
          "programID": {
            "type": "integer",
            "format": "int32"
          },
          "importFormat": {
            "type": "string",
            "nullable": true
          },
          "importDate": {
            "type": "string",
            "format": "date-time"
          },
          "columnMappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ColumnMappingDto"
            },
            "nullable": true
          },
          "replaceExisting": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "Request DTO for applying mappings and importing general ledger data"
      },
      "ApproveMatchRequest": {
        "type": "object",
        "properties": {
          "partsMatchId": {
            "type": "integer",
            "format": "int32"
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApproveReportsRequest": {
        "type": "object",
        "properties": {
          "reportIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "isApproved": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AssetDto": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "nullable": true
          },
          "filename": {
            "type": "string",
            "nullable": true
          },
          "contentType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssignProgramsRequest": {
        "type": "object",
        "properties": {
          "programIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssignReportsToRoleDto": {
        "type": "object",
        "properties": {
          "reportIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssignReportsToUserRequest": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "nullable": true
          },
          "reportIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssignShopsToRoleDto": {
        "type": "object",
        "properties": {
          "shopIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssignShopsToUserRequest": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "nullable": true
          },
          "shopIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssignUsersRequest": {
        "type": "object",
        "properties": {
          "userIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssignUsersToRoleDto": {
        "type": "object",
        "properties": {
          "userIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssignWorkspaceToCustomersDto": {
        "required": [
          "customerIds"
        ],
        "type": "object",
        "properties": {
          "customerIds": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "customWorkspaceNameForAll": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AttributeCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "rowCreatedBy": {
            "type": "string",
            "nullable": true
          },
          "rowCreatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "rowModifiedBy": {
            "type": "string",
            "nullable": true
          },
          "rowModifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "shopAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopAttribute"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AttributeCategoryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "rowCreatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "rowCreatedBy": {
            "type": "string",
            "nullable": true
          },
          "rowModifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "rowModifiedBy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AttributeUnit": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "unitType": {
            "type": "string",
            "nullable": true
          },
          "isTable": {
            "type": "boolean"
          },
          "rowCreatedBy": {
            "type": "string",
            "nullable": true
          },
          "rowCreatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "rowModifiedBy": {
            "type": "string",
            "nullable": true
          },
          "rowModifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "shopAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopAttribute"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AttributeUnitDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "unitType": {
            "type": "string",
            "nullable": true
          },
          "isTable": {
            "type": "boolean"
          },
          "rowCreatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "rowCreatedBy": {
            "type": "string",
            "nullable": true
          },
          "rowModifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "rowModifiedBy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "nullable": true
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AutoMatchRequest": {
        "type": "object",
        "properties": {
          "variantPartId": {
            "type": "integer",
            "format": "int32"
          },
          "masterPartId": {
            "type": "integer",
            "format": "int32"
          },
          "matchType": {
            "type": "string",
            "nullable": true
          },
          "score": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Request model for automatic matching"
      },
      "AutoMatchRequestDto": {
        "type": "object",
        "properties": {
          "shopID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "programID": {
            "type": "integer",
            "format": "int32"
          },
          "minConfidence": {
            "type": "number",
            "format": "double"
          },
          "reviewMode": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AutoMatchResultDto": {
        "type": "object",
        "properties": {
          "suggestedMatches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountMatchingDto"
            },
            "nullable": true
          },
          "highConfidenceMatches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountMatchingDto"
            },
            "nullable": true
          },
          "unmatchedShopAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChartOfAccountDto"
            },
            "nullable": true
          },
          "statistics": {
            "$ref": "#/components/schemas/AutoMatchStatisticsDto"
          }
        },
        "additionalProperties": false
      },
      "AutoMatchStatisticsDto": {
        "type": "object",
        "properties": {
          "totalShopAccounts": {
            "type": "integer",
            "format": "int32"
          },
          "matchedAccounts": {
            "type": "integer",
            "format": "int32"
          },
          "potentialMatches": {
            "type": "integer",
            "format": "int32"
          },
          "unmatchedAccounts": {
            "type": "integer",
            "format": "int32"
          },
          "matchRate": {
            "type": "number",
            "format": "double"
          },
          "highConfidenceMatches": {
            "type": "integer",
            "format": "int32"
          },
          "subsetMatches": {
            "type": "integer",
            "format": "int32"
          },
          "averageConfidence": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "BooleanApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ApiError"
          }
        },
        "additionalProperties": false
      },
      "BrandDto": {
        "type": "object",
        "properties": {
          "brandID": {
            "type": "integer",
            "format": "int32"
          },
          "brandName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "manufacturerID": {
            "type": "integer",
            "format": "int32"
          },
          "manufacturerName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BrandingAssetsDto": {
        "type": "object",
        "properties": {
          "logo": {
            "$ref": "#/components/schemas/AssetDto"
          },
          "icon": {
            "$ref": "#/components/schemas/AssetDto"
          },
          "background": {
            "$ref": "#/components/schemas/AssetDto"
          }
        },
        "additionalProperties": false
      },
      "BulkCreateGeneralLedgerDto": {
        "type": "object",
        "properties": {
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateGeneralLedgerEntryDto"
            },
            "nullable": true
          },
          "validateOnly": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "BulkFeatureUpdateRequest": {
        "required": [
          "featureId"
        ],
        "type": "object",
        "properties": {
          "featureId": {
            "type": "string",
            "format": "uuid"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "reason": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BulkMatchActionRequest": {
        "type": "object",
        "properties": {
          "matchIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "action": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "rejectionReason": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BulkUpdateShopKpiDto": {
        "type": "object",
        "properties": {
          "updates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopKpiBulkUpdateItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BulkUpdateShopPropertiesDto": {
        "type": "object",
        "properties": {
          "updates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopPropertyBulkUpdateItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BulkUpdateTenantFeaturesRequest": {
        "required": [
          "featureUpdates"
        ],
        "type": "object",
        "properties": {
          "featureUpdates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkFeatureUpdateRequest"
            }
          }
        },
        "additionalProperties": false
      },
      "BulkUploadErrorDto": {
        "type": "object",
        "properties": {
          "errorID": {
            "type": "integer",
            "format": "int32"
          },
          "jobID": {
            "type": "integer",
            "format": "int32"
          },
          "rowNumber": {
            "type": "integer",
            "format": "int32"
          },
          "errorType": {
            "type": "string",
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "rowData": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "BulkUploadJobDto": {
        "type": "object",
        "properties": {
          "jobID": {
            "type": "integer",
            "format": "int32"
          },
          "jobType": {
            "type": "string",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "startedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "completedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          },
          "processedRecords": {
            "type": "integer",
            "format": "int32"
          },
          "successfulRecords": {
            "type": "integer",
            "format": "int32"
          },
          "failedRecords": {
            "type": "integer",
            "format": "int32"
          },
          "percentageComplete": {
            "type": "number",
            "format": "double"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "createdByUserId": {
            "type": "string",
            "nullable": true
          },
          "createdByUserName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BulkUploadResponseDto": {
        "type": "object",
        "properties": {
          "jobID": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "BulkUploadStatusDto": {
        "type": "object",
        "properties": {
          "jobID": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "percentageComplete": {
            "type": "number",
            "format": "double"
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          },
          "processedRecords": {
            "type": "integer",
            "format": "int32"
          },
          "successfulRecords": {
            "type": "integer",
            "format": "int32"
          },
          "failedRecords": {
            "type": "integer",
            "format": "int32"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkUploadErrorDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CacheHeadersDto": {
        "type": "object",
        "properties": {
          "maxAge": {
            "type": "integer",
            "format": "int32"
          },
          "eTag": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ChangeCategoryRequest": {
        "type": "object",
        "properties": {
          "reportIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ChangePasswordRequest": {
        "type": "object",
        "properties": {
          "currentPassword": {
            "type": "string",
            "nullable": true
          },
          "newPassword": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChartOfAccountAccountTypeDto": {
        "type": "object",
        "properties": {
          "programId": {
            "type": "integer",
            "format": "int32"
          },
          "accountType": {
            "type": "string",
            "nullable": true
          },
          "numOfAccounts": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ChartOfAccountAccountTypesResponseDto": {
        "type": "object",
        "properties": {
          "accountTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChartOfAccountAccountTypeDto"
            },
            "nullable": true
          },
          "totalPrograms": {
            "type": "integer",
            "format": "int32"
          },
          "totalAccountTypes": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ChartOfAccountDto": {
        "type": "object",
        "properties": {
          "chartOfAccountsID": {
            "type": "integer",
            "format": "int32"
          },
          "programID": {
            "type": "integer",
            "format": "int32"
          },
          "shopID": {
            "type": "integer",
            "description": "NULL for master chart of accounts, populated for shop-specific accounts",
            "format": "int32",
            "nullable": true
          },
          "accountName": {
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "accountDescription": {
            "type": "string",
            "nullable": true
          },
          "accountType": {
            "type": "string",
            "nullable": true
          },
          "drCrDefault": {
            "type": "string",
            "nullable": true
          },
          "lineType": {
            "type": "string",
            "nullable": true
          },
          "coASequenceNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "indentLevel": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentCoA": {
            "type": "string",
            "nullable": true
          },
          "rowCreatedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "rowCreatedBy": {
            "type": "string",
            "nullable": true
          },
          "effectiveDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "rowModifiedBy": {
            "type": "string",
            "nullable": true
          },
          "rowModifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isMapped": {
            "type": "boolean"
          },
          "masterChartOfAccountID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "matchingConfidence": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "matchingMethod": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "isMasterAccount": {
            "type": "boolean"
          },
          "programName": {
            "type": "string",
            "nullable": true
          },
          "tenantName": {
            "type": "string",
            "nullable": true
          },
          "shopName": {
            "type": "string",
            "nullable": true
          },
          "masterAccountName": {
            "type": "string",
            "nullable": true
          },
          "matchingStatus": {
            "type": "string",
            "nullable": true
          },
          "potentialMatches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChartOfAccountMatchDto"
            },
            "nullable": true
          },
          "confirmedMatch": {
            "$ref": "#/components/schemas/ChartOfAccountMatchDto"
          }
        },
        "additionalProperties": false
      },
      "ChartOfAccountMatchDto": {
        "type": "object",
        "properties": {
          "matchingID": {
            "type": "integer",
            "format": "int32"
          },
          "masterChartOfAccountID": {
            "type": "integer",
            "format": "int32"
          },
          "masterAccountName": {
            "type": "string",
            "nullable": true
          },
          "masterAccountNumber": {
            "type": "string",
            "nullable": true
          },
          "masterAccountDescription": {
            "type": "string",
            "nullable": true
          },
          "matchingConfidence": {
            "type": "number",
            "format": "double"
          },
          "matchingMethod": {
            "type": "string",
            "nullable": true
          },
          "matchingStatus": {
            "type": "string",
            "nullable": true
          },
          "matchingDetails": {
            "type": "string",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "reviewedBy": {
            "type": "string",
            "nullable": true
          },
          "reviewedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChartOfAccountResponseDto": {
        "type": "object",
        "properties": {
          "chartOfAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChartOfAccountDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CloneSubscriptionRequest": {
        "type": "object",
        "properties": {
          "newName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ColumnMappingDto": {
        "type": "object",
        "properties": {
          "sourceColumn": {
            "type": "string",
            "nullable": true
          },
          "targetField": {
            "type": "string",
            "nullable": true
          },
          "isRequired": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "Individual column mapping"
      },
      "ColumnMappingRequestDto": {
        "type": "object",
        "properties": {
          "jobID": {
            "type": "integer",
            "format": "int32"
          },
          "columnMappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ColumnMappingDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Column mapping request DTO"
      },
      "ColumnMappingResponseDto": {
        "type": "object",
        "properties": {
          "jobID": {
            "type": "integer",
            "format": "int32"
          },
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "mappedRows": {
            "type": "integer",
            "format": "int32"
          },
          "failedRows": {
            "type": "integer",
            "format": "int32"
          },
          "validationErrors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response after processing column mappings"
      },
      "CombinedImportResponseDto": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "processedRecords": {
            "type": "integer",
            "format": "int32"
          },
          "successfulRecords": {
            "type": "integer",
            "format": "int32"
          },
          "failedRecords": {
            "type": "integer",
            "format": "int32"
          },
          "chartOfAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChartOfAccountDto"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConfirmMatchingDto": {
        "type": "object",
        "properties": {
          "matchingIDs": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "action": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateAccountMatchingDto": {
        "type": "object",
        "properties": {
          "shopChartOfAccountID": {
            "type": "integer",
            "format": "int32"
          },
          "masterChartOfAccountID": {
            "type": "integer",
            "format": "int32"
          },
          "matchingConfidence": {
            "type": "number",
            "format": "double"
          },
          "matchingMethod": {
            "type": "string",
            "nullable": true
          },
          "matchingDetails": {
            "type": "string",
            "nullable": true
          },
          "matchingStatus": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateAttributeCategoryDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateAttributeUnitDto": {
        "type": "object",
        "properties": {
          "unitType": {
            "type": "string",
            "nullable": true
          },
          "isTable": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CreateChartOfAccountDto": {
        "required": [
          "programID"
        ],
        "type": "object",
        "properties": {
          "programID": {
            "type": "integer",
            "format": "int32"
          },
          "shopID": {
            "type": "integer",
            "description": "Must be NULL for master accounts, required for shop accounts.\r\nUse CreateMasterChartOfAccount or CreateShopChartOfAccount endpoints to ensure proper setting.",
            "format": "int32",
            "nullable": true
          },
          "accountName": {
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "accountDescription": {
            "type": "string",
            "nullable": true
          },
          "accountType": {
            "type": "string",
            "nullable": true
          },
          "drCrDefault": {
            "type": "string",
            "nullable": true
          },
          "lineType": {
            "type": "string",
            "nullable": true
          },
          "coASequenceNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "indentLevel": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentCoA": {
            "type": "string",
            "nullable": true
          },
          "effectiveDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CreateCustomerDto": {
        "required": [
          "name",
          "subdomain"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "subdomain": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "address": {
            "maxLength": 250,
            "type": "string",
            "nullable": true
          },
          "theme": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "legacyBusinessNetworkID": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "portalDisplayName": {
            "maxLength": 200,
            "type": "string",
            "nullable": true
          },
          "portalDisplaySubName": {
            "maxLength": 200,
            "type": "string",
            "nullable": true
          },
          "portalDisplayPageSubTitle": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "portalWindowIcon": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateCustomerProgramsDto": {
        "type": "object",
        "properties": {
          "programID": {
            "type": "integer",
            "format": "int32"
          },
          "customerID": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean"
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateFeatureRequest": {
        "required": [
          "category",
          "featureKey",
          "featureName"
        ],
        "type": "object",
        "properties": {
          "featureKey": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "featureName": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "category": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "menuPath": {
            "maxLength": 300,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateGeneralLedgerEntryDto": {
        "type": "object",
        "properties": {
          "chartOfAccountsID": {
            "type": "integer",
            "format": "int32"
          },
          "shopID": {
            "type": "integer",
            "format": "int32"
          },
          "programID": {
            "type": "integer",
            "format": "int32"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "entryType": {
            "type": "string",
            "nullable": true
          },
          "entryAmount": {
            "type": "number",
            "format": "double"
          },
          "entryDesc": {
            "type": "string",
            "nullable": true
          },
          "drcrInd": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CreateManualMatchRequest": {
        "type": "object",
        "properties": {
          "masterPartId": {
            "type": "integer",
            "format": "int32"
          },
          "variantPartId": {
            "type": "integer",
            "format": "int32"
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateMasterPartDto": {
        "type": "object",
        "properties": {
          "manufacturerID": {
            "type": "integer",
            "format": "int32"
          },
          "brandID": {
            "type": "integer",
            "format": "int32"
          },
          "partCategoryID": {
            "type": "integer",
            "format": "int32"
          },
          "partNumber": {
            "type": "string",
            "nullable": true
          },
          "uniqueCode": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "sizeUnitOfSale": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateMultipleCustomerProgramsDto": {
        "type": "object",
        "properties": {
          "customerIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "skipExisting": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CreateMultipleProgramShopSubscriptionsDto": {
        "type": "object",
        "properties": {
          "shopIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "retroactiveDays": {
            "type": "integer",
            "format": "int32"
          },
          "minWarrantySalesDollars": {
            "type": "number",
            "format": "double"
          },
          "isActive": {
            "type": "boolean"
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "additionalParameters": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "skipExisting": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CreateProgramCategoryDto": {
        "type": "object",
        "properties": {
          "categoryName": {
            "type": "string",
            "nullable": true
          },
          "categoryDescription": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CreateProgramDto": {
        "type": "object",
        "properties": {
          "programName": {
            "type": "string",
            "nullable": true
          },
          "programDescription": {
            "type": "string",
            "nullable": true
          },
          "programTypeID": {
            "type": "integer",
            "format": "int32"
          },
          "contactName": {
            "type": "string",
            "nullable": true
          },
          "contactPhone": {
            "type": "string",
            "nullable": true
          },
          "contactEmail": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "typeSpecificAttributes": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateProgramShopSubscriptionDto": {
        "type": "object",
        "properties": {
          "programID": {
            "type": "integer",
            "format": "int32"
          },
          "shopID": {
            "type": "integer",
            "format": "int32"
          },
          "retroactiveDays": {
            "type": "integer",
            "format": "int32"
          },
          "minWarrantySalesDollars": {
            "type": "number",
            "format": "double"
          },
          "isActive": {
            "type": "boolean"
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "additionalParameters": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateProgramTypeAttributeDto": {
        "type": "object",
        "properties": {
          "programTypeID": {
            "type": "integer",
            "format": "int32"
          },
          "attributeName": {
            "type": "string",
            "nullable": true
          },
          "attributeType": {
            "type": "string",
            "nullable": true
          },
          "isRequired": {
            "type": "boolean"
          },
          "defaultValue": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "dataSource": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CreateProgramTypeDto": {
        "type": "object",
        "properties": {
          "typeName": {
            "type": "string",
            "nullable": true
          },
          "typeDescription": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CreateRoleDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateShopAttributeDto": {
        "type": "object",
        "properties": {
          "attributeType": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "attributeCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "attributeName": {
            "type": "string",
            "nullable": true
          },
          "attributeUnitId": {
            "type": "integer",
            "format": "int32"
          },
          "validationString": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateShopKpiDto": {
        "type": "object",
        "properties": {
          "shopAttributeId": {
            "type": "integer",
            "format": "int32"
          },
          "shopId": {
            "type": "integer",
            "format": "int32"
          },
          "kpiYear": {
            "type": "integer",
            "format": "int32"
          },
          "kpiMonth": {
            "type": "integer",
            "format": "int32"
          },
          "kpiValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "kpiGoal": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "kpiThreshold": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "kpibmsValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateShopPropertiesDto": {
        "type": "object",
        "properties": {
          "shopAttributeId": {
            "type": "integer",
            "format": "int32"
          },
          "shopId": {
            "type": "integer",
            "format": "int32"
          },
          "propertyYear": {
            "type": "integer",
            "format": "int32"
          },
          "propertyMonth": {
            "type": "integer",
            "format": "int32"
          },
          "propertyValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateShopStatsDto": {
        "type": "object",
        "properties": {
          "shopId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "mappedMake": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "numberOfROs": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "grossAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "netAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "repairCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "labourAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "paintLabourAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "bodyLabourAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "frameLabourAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "mechanicalLabourAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "otherLabourAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "labourCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "paintLabourCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "mechanicalLabourCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "otherLabourCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "paintMaterialsAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "materialsAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "paintMaterialsCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "materialsCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "labourHours": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "paintLabourHours": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "bodyLabourHours": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "frameLabourHours": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "otherLabourHours": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "bodyRepairAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "bodyReplaceAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "bodyReplaceHours": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "towing": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "towingCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "partsAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "oemPartsAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "amPartsAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "reconditionedPartsAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "recycledPartsAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "otherPartsAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "partsCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "nonOEMPartsCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "amPartsCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "reconditionedPartsCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "recycledPartsCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "otherPartsCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "hazardousWasteAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "hazardousWasteCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "subletAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "subletCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "otherAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "otherCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateSubscriptionDto": {
        "required": [
          "emailBody",
          "emailSubject",
          "name",
          "reportIds",
          "scheduleConfig",
          "scheduleStartDate",
          "scheduleType",
          "userIds"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          },
          "description": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "emailSubject": {
            "maxLength": 300,
            "minLength": 0,
            "type": "string"
          },
          "emailBody": {
            "minLength": 1,
            "type": "string"
          },
          "scheduleType": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "scheduleConfig": {
            "$ref": "#/components/schemas/ScheduleConfigDto"
          },
          "scheduleStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "scheduleEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "reportIds": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "userIds": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isCustomerUser": {
            "type": "boolean"
          },
          "isCCIUser": {
            "type": "boolean"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CreateUserReportFavoriteDto": {
        "type": "object",
        "properties": {
          "reportId": {
            "type": "integer",
            "format": "int32"
          },
          "note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateUserRequest": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/CreateUserDto"
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Customer": {
        "required": [
          "name",
          "subdomain"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "subdomain": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "address": {
            "maxLength": 250,
            "type": "string",
            "nullable": true
          },
          "logoUrl": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "backgroundImageUrl": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "theme": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "legacyBusinessNetworkID": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "portalDisplayName": {
            "maxLength": 200,
            "type": "string",
            "nullable": true
          },
          "portalDisplaySubName": {
            "maxLength": 200,
            "type": "string",
            "nullable": true
          },
          "portalDisplayPageSubTitle": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "portalWindowIcon": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "customerUsers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerUser"
            },
            "nullable": true
          },
          "customerWorkspaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerWorkspace"
            },
            "nullable": true
          },
          "programs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Program"
            },
            "nullable": true
          },
          "reportCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportCategory"
            },
            "nullable": true
          },
          "customerShops": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerShop"
            },
            "nullable": true
          },
          "customerReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerReport"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "subdomain": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "logoUrl": {
            "type": "string",
            "nullable": true
          },
          "backgroundImageUrl": {
            "type": "string",
            "nullable": true
          },
          "theme": {
            "type": "string",
            "nullable": true
          },
          "legacyBusinessNetworkID": {
            "type": "string",
            "nullable": true
          },
          "portalDisplayName": {
            "type": "string",
            "nullable": true
          },
          "portalDisplaySubName": {
            "type": "string",
            "nullable": true
          },
          "portalDisplayPageSubTitle": {
            "type": "string",
            "nullable": true
          },
          "portalWindowIcon": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerPrograms": {
        "type": "object",
        "properties": {
          "assignmentID": {
            "type": "integer",
            "format": "int32"
          },
          "programID": {
            "type": "integer",
            "format": "int32"
          },
          "customerID": {
            "type": "integer",
            "format": "int32"
          },
          "assignedAt": {
            "type": "string",
            "format": "date-time"
          },
          "assignedByUserID": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "program": {
            "$ref": "#/components/schemas/Program"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "assignedByUser": {
            "$ref": "#/components/schemas/ApplicationUser"
          }
        },
        "additionalProperties": false
      },
      "CustomerProgramsDto": {
        "type": "object",
        "properties": {
          "assignmentID": {
            "type": "integer",
            "format": "int32"
          },
          "programID": {
            "type": "integer",
            "format": "int32"
          },
          "programName": {
            "type": "string",
            "nullable": true
          },
          "customerID": {
            "type": "integer",
            "format": "int32"
          },
          "customerName": {
            "type": "string",
            "nullable": true
          },
          "assignedAt": {
            "type": "string",
            "format": "date-time"
          },
          "assignedByUserID": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerReport": {
        "required": [
          "customerId",
          "reportId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "reportId": {
            "type": "integer",
            "format": "int32"
          },
          "report": {
            "$ref": "#/components/schemas/Report"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isApproved": {
            "type": "boolean"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "reportCategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "reportCategory": {
            "$ref": "#/components/schemas/ReportCategory"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerReportDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "customerName": {
            "type": "string",
            "nullable": true
          },
          "reportId": {
            "type": "integer",
            "format": "int32"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isApproved": {
            "type": "boolean"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "reportCategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "reportCategoryName": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerShop": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "shopId": {
            "type": "integer",
            "format": "int32"
          },
          "customerShopID": {
            "type": "integer",
            "format": "int32"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "shop": {
            "$ref": "#/components/schemas/Shop"
          }
        },
        "additionalProperties": false
      },
      "CustomerUser": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "user": {
            "$ref": "#/components/schemas/ApplicationUser"
          }
        },
        "additionalProperties": false
      },
      "CustomerWorkspace": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "workspaceId": {
            "type": "integer",
            "format": "int32"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "workspace": {
            "$ref": "#/components/schemas/Workspace"
          },
          "workspaceName": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "isDefault": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CustomerWorkspaceDto": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "customerName": {
            "type": "string",
            "nullable": true
          },
          "workspaceId": {
            "type": "integer",
            "format": "int32"
          },
          "workspaceName": {
            "type": "string",
            "nullable": true
          },
          "tenantSpecificWorkspaceName": {
            "type": "string",
            "nullable": true
          },
          "assignedDate": {
            "type": "string",
            "format": "date-time"
          },
          "isDefault": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DashboardSummaryDto": {
        "type": "object",
        "properties": {
          "shopStats": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopDashboardStatsDto"
            },
            "nullable": true
          },
          "totals": {
            "$ref": "#/components/schemas/DashboardTotalsDto"
          },
          "trendData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrendDataDto"
            },
            "nullable": true
          },
          "topPerformers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TopPerformersDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DashboardTotalsDto": {
        "type": "object",
        "properties": {
          "totalShops": {
            "type": "integer",
            "format": "int32"
          },
          "totalROs": {
            "type": "integer",
            "format": "int32"
          },
          "totalRevenue": {
            "type": "number",
            "format": "double"
          },
          "totalCosts": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "averageProfitMargin": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalLabourHours": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "averageLabourEfficiency": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DayOfWeek": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "format": "int32"
      },
      "DevLoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExcelColumnDto": {
        "type": "object",
        "properties": {
          "columnName": {
            "type": "string",
            "nullable": true
          },
          "columnIndex": {
            "type": "integer",
            "format": "int32"
          },
          "hasHeader": {
            "type": "boolean"
          },
          "suggestedMapping": {
            "type": "string",
            "nullable": true
          },
          "sampleValues": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Information about a detected column in the Excel file"
      },
      "FeatureResponse": {
        "type": "object",
        "properties": {
          "featureId": {
            "type": "string",
            "format": "uuid"
          },
          "featureKey": {
            "type": "string",
            "nullable": true
          },
          "featureName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "menuPath": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "FeatureResponseApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/FeatureResponse"
          },
          "error": {
            "$ref": "#/components/schemas/ApiError"
          }
        },
        "additionalProperties": false
      },
      "FeatureResponseListApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FeatureResponse"
            },
            "nullable": true
          },
          "error": {
            "$ref": "#/components/schemas/ApiError"
          }
        },
        "additionalProperties": false
      },
      "FinalizeGeneralLedgerDto": {
        "type": "object",
        "properties": {
          "generalLedgerIDs": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "shopID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "programID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "chartOfAccountsID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GeneralLedgerEntryDto": {
        "type": "object",
        "properties": {
          "generalLedgerID": {
            "type": "integer",
            "format": "int32"
          },
          "chartOfAccountsID": {
            "type": "integer",
            "format": "int32"
          },
          "tenantID": {
            "type": "integer",
            "format": "int32"
          },
          "shopID": {
            "type": "integer",
            "format": "int32"
          },
          "programID": {
            "type": "integer",
            "format": "int32"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "entryType": {
            "type": "string",
            "nullable": true
          },
          "entryAmount": {
            "type": "number",
            "format": "double"
          },
          "entryDesc": {
            "type": "string",
            "nullable": true
          },
          "drcrInd": {
            "type": "string",
            "nullable": true
          },
          "mappedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "rowCreatedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "rowCreatedBy": {
            "type": "string",
            "nullable": true
          },
          "rowModifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "rowModifiedBy": {
            "type": "string",
            "nullable": true
          },
          "isFinalized": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "accountName": {
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "tenantName": {
            "type": "string",
            "nullable": true
          },
          "shopName": {
            "type": "string",
            "nullable": true
          },
          "programName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GeneralLedgerImportFormatDto": {
        "type": "object",
        "properties": {
          "formatType": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "requiredFields": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "General Ledger import format selection options"
      },
      "GeneralLedgerImportResponseDto": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "processedRecords": {
            "type": "integer",
            "format": "int32"
          },
          "successfulRecords": {
            "type": "integer",
            "format": "int32"
          },
          "failedRecords": {
            "type": "integer",
            "format": "int32"
          },
          "replacedRecords": {
            "type": "integer",
            "format": "int32"
          },
          "validationResult": {
            "$ref": "#/components/schemas/GeneralLedgerImportValidationDto"
          },
          "importedEntries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GeneralLedgerEntryDto"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Combined response for general ledger import"
      },
      "GeneralLedgerImportValidationDto": {
        "type": "object",
        "properties": {
          "isValid": {
            "type": "boolean"
          },
          "unmappedAccounts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "validationErrors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          },
          "validRecords": {
            "type": "integer",
            "format": "int32"
          },
          "invalidRecords": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response DTO for general ledger import validation"
      },
      "GeneralLedgerResponseDto": {
        "type": "object",
        "properties": {
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GeneralLedgerEntryDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "GenerateImpersonationTokenRequest": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HealthCheckResponseDto": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "cdnEndpoint": {
            "type": "string",
            "nullable": true
          },
          "cacheHeaders": {
            "$ref": "#/components/schemas/CacheHeadersDto"
          }
        },
        "additionalProperties": false
      },
      "ImageUploadResponseDto": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "originalFileName": {
            "type": "string",
            "nullable": true
          },
          "contentType": {
            "type": "string",
            "nullable": true
          },
          "sizeInBytes": {
            "type": "integer",
            "format": "int64"
          },
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          },
          "uploadedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ImpersonationInfoDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32"
          },
          "tenantName": {
            "type": "string",
            "nullable": true
          },
          "tenantSubdomain": {
            "type": "string",
            "nullable": true
          },
          "impersonatorId": {
            "type": "string",
            "nullable": true
          },
          "issuedAt": {
            "type": "string",
            "format": "date-time"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ImpersonationTokenDto": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "nullable": true
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time"
          },
          "impersonationUrl": {
            "type": "string",
            "nullable": true
          },
          "tenant": {
            "$ref": "#/components/schemas/TenantWithAdminsDto"
          },
          "impersonatedUser": {
            "$ref": "#/components/schemas/TenantAdminDto"
          }
        },
        "additionalProperties": false
      },
      "ImpersonationTokenRequest": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImportMappedDataResponseDto": {
        "type": "object",
        "properties": {
          "jobID": {
            "type": "integer",
            "format": "int32"
          },
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "totalProcessed": {
            "type": "integer",
            "format": "int32"
          },
          "successfulImports": {
            "type": "integer",
            "format": "int32"
          },
          "failedImports": {
            "type": "integer",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response DTO for the final import process"
      },
      "ImportReportsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "processedReports": {
            "type": "integer",
            "format": "int32"
          },
          "newReports": {
            "type": "integer",
            "format": "int32"
          },
          "updatedReports": {
            "type": "integer",
            "format": "int32"
          },
          "deletedReports": {
            "type": "integer",
            "format": "int32"
          },
          "upsertedCustomerReports": {
            "type": "integer",
            "format": "int32"
          },
          "deletedCustomerReports": {
            "type": "integer",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ManufacturerDto": {
        "type": "object",
        "properties": {
          "manufacturerID": {
            "type": "integer",
            "format": "int32"
          },
          "manufacturerName": {
            "type": "string",
            "nullable": true
          },
          "contactInfo": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "website": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "MappingTargetFieldDto": {
        "type": "object",
        "properties": {
          "fieldName": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "isRequired": {
            "type": "boolean"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "dataType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Available target fields for mapping"
      },
      "MasterPartDto": {
        "type": "object",
        "properties": {
          "partID": {
            "type": "integer",
            "format": "int32"
          },
          "manufacturerID": {
            "type": "integer",
            "format": "int32"
          },
          "manufacturerName": {
            "type": "string",
            "nullable": true
          },
          "brandID": {
            "type": "integer",
            "format": "int32"
          },
          "brandName": {
            "type": "string",
            "nullable": true
          },
          "partCategoryID": {
            "type": "integer",
            "format": "int32"
          },
          "partCategoryName": {
            "type": "string",
            "nullable": true
          },
          "partNumber": {
            "type": "string",
            "nullable": true
          },
          "uniqueCode": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "sizeUnitOfSale": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ObjectApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "nullable": true
          },
          "error": {
            "$ref": "#/components/schemas/ApiError"
          }
        },
        "additionalProperties": false
      },
      "PartCategoryDto": {
        "type": "object",
        "properties": {
          "partCategoryID": {
            "type": "integer",
            "format": "int32"
          },
          "partCategoryName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PartsMatchDetailDto": {
        "type": "object",
        "properties": {
          "partsMatchId": {
            "type": "integer",
            "format": "int32"
          },
          "masterPart": {
            "$ref": "#/components/schemas/MasterPartDto"
          },
          "variantPart": {
            "$ref": "#/components/schemas/VariantPartDto"
          },
          "matchType": {
            "type": "string",
            "nullable": true
          },
          "baseScore": {
            "type": "number",
            "format": "double"
          },
          "combinedScore": {
            "type": "number",
            "format": "double"
          },
          "confidence": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "isManual": {
            "type": "boolean"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "rejectionReason": {
            "type": "string",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "reviewedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "reviewedBy": {
            "type": "string",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PartsMatchDto": {
        "type": "object",
        "properties": {
          "partsMatchId": {
            "type": "integer",
            "format": "int32"
          },
          "masterPartId": {
            "type": "integer",
            "format": "int32"
          },
          "variantPartId": {
            "type": "integer",
            "format": "int32"
          },
          "matchType": {
            "type": "string",
            "nullable": true
          },
          "baseScore": {
            "type": "number",
            "format": "double"
          },
          "combinedScore": {
            "type": "number",
            "format": "double"
          },
          "confidence": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "isManual": {
            "type": "boolean"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "rejectionReason": {
            "type": "string",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "reviewedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "reviewedBy": {
            "type": "string",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "masterPart": {
            "$ref": "#/components/schemas/MasterPartDto"
          },
          "variantPart": {
            "$ref": "#/components/schemas/VariantPartDto"
          }
        },
        "additionalProperties": false
      },
      "PartsMatchPagedResult": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PartsMatchDetailDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "hasNextPage": {
            "type": "boolean"
          },
          "hasPreviousPage": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PartsMatchSummaryDto": {
        "type": "object",
        "properties": {
          "totalMatches": {
            "type": "integer",
            "format": "int32"
          },
          "pendingMatches": {
            "type": "integer",
            "format": "int32"
          },
          "approvedMatches": {
            "type": "integer",
            "format": "int32"
          },
          "rejectedMatches": {
            "type": "integer",
            "format": "int32"
          },
          "autoMatches": {
            "type": "integer",
            "format": "int32"
          },
          "manualMatches": {
            "type": "integer",
            "format": "int32"
          },
          "averageConfidenceScore": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Permission": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "rolePermissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RolePermission"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PermissionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PortalDisplayNameDto": {
        "type": "object",
        "properties": {
          "bold": {
            "type": "string",
            "nullable": true
          },
          "normal": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PowerBiConfigDto": {
        "type": "object",
        "properties": {
          "embedToken": {
            "type": "string",
            "nullable": true
          },
          "embedUrl": {
            "type": "string",
            "nullable": true
          },
          "reportId": {
            "type": "string",
            "nullable": true
          },
          "expiresInMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "datasetId": {
            "type": "string",
            "nullable": true
          },
          "datasetName": {
            "type": "string",
            "nullable": true
          },
          "isEffectiveIdentityRequired": {
            "type": "boolean"
          },
          "isEffectiveIdentityRolesRequired": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PowerBiReportDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "reportType": {
            "type": "string",
            "nullable": true
          },
          "webUrl": {
            "type": "string",
            "nullable": true
          },
          "embedUrl": {
            "type": "string",
            "nullable": true
          },
          "isFromPbix": {
            "type": "boolean",
            "nullable": true
          },
          "isOwnedByMe": {
            "type": "boolean",
            "nullable": true
          },
          "datasetId": {
            "type": "string",
            "nullable": true
          },
          "datasetWorkspaceId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "Program": {
        "required": [
          "programName"
        ],
        "type": "object",
        "properties": {
          "programID": {
            "type": "integer",
            "format": "int32"
          },
          "programName": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "programDescription": {
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "programTypeID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "contactName": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "contactPhone": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "contactEmail": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdByCustomerID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdByUserID": {
            "maxLength": 450,
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "isActive": {
            "type": "boolean"
          },
          "typeSpecificAttributes": {
            "type": "string",
            "nullable": true
          },
          "programType": {
            "$ref": "#/components/schemas/ProgramType"
          },
          "createdByCustomer": {
            "$ref": "#/components/schemas/Customer"
          },
          "createdByUser": {
            "$ref": "#/components/schemas/ApplicationUser"
          },
          "customerPrograms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerPrograms"
            },
            "nullable": true
          },
          "programShopSubscriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProgramShopSubscription"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProgramCategoryDto": {
        "type": "object",
        "properties": {
          "programCategoryID": {
            "type": "integer",
            "format": "int32"
          },
          "categoryName": {
            "type": "string",
            "nullable": true
          },
          "categoryDescription": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "programCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ProgramDto": {
        "type": "object",
        "properties": {
          "programID": {
            "type": "integer",
            "format": "int32"
          },
          "programName": {
            "type": "string",
            "nullable": true
          },
          "programDescription": {
            "type": "string",
            "nullable": true
          },
          "programTypeID": {
            "type": "integer",
            "format": "int32"
          },
          "programTypeName": {
            "type": "string",
            "nullable": true
          },
          "contactName": {
            "type": "string",
            "nullable": true
          },
          "contactPhone": {
            "type": "string",
            "nullable": true
          },
          "contactEmail": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdByCustomerID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdByCustomerName": {
            "type": "string",
            "nullable": true
          },
          "createdByUserID": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "isActive": {
            "type": "boolean"
          },
          "typeSpecificAttributes": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "assignments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerProgramsDto"
            },
            "nullable": true
          },
          "shopSubscriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProgramShopSubscriptionDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProgramShopSubscription": {
        "type": "object",
        "properties": {
          "shopSubscriptionID": {
            "type": "integer",
            "format": "int32"
          },
          "programID": {
            "type": "integer",
            "format": "int32"
          },
          "shopID": {
            "type": "integer",
            "format": "int32"
          },
          "retroactiveDays": {
            "type": "integer",
            "format": "int32"
          },
          "minWarrantySalesDollars": {
            "type": "number",
            "format": "double"
          },
          "assignedAt": {
            "type": "string",
            "format": "date-time"
          },
          "assignedByUserID": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "additionalParameters": {
            "type": "string",
            "nullable": true
          },
          "program": {
            "$ref": "#/components/schemas/Program"
          },
          "shop": {
            "$ref": "#/components/schemas/Shop"
          },
          "assignedByUser": {
            "$ref": "#/components/schemas/ApplicationUser"
          }
        },
        "additionalProperties": false
      },
      "ProgramShopSubscriptionDto": {
        "type": "object",
        "properties": {
          "shopSubscriptionID": {
            "type": "integer",
            "format": "int32"
          },
          "programID": {
            "type": "integer",
            "format": "int32"
          },
          "programName": {
            "type": "string",
            "nullable": true
          },
          "shopID": {
            "type": "integer",
            "format": "int32"
          },
          "shopName": {
            "type": "string",
            "nullable": true
          },
          "retroactiveDays": {
            "type": "integer",
            "format": "int32"
          },
          "minWarrantySalesDollars": {
            "type": "number",
            "format": "double"
          },
          "assignedAt": {
            "type": "string",
            "format": "date-time"
          },
          "assignedByUserID": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "additionalParameters": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProgramType": {
        "required": [
          "typeName"
        ],
        "type": "object",
        "properties": {
          "programTypeID": {
            "type": "integer",
            "format": "int32"
          },
          "typeName": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "typeDescription": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "programs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Program"
            },
            "nullable": true
          },
          "programTypeAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProgramTypeAttribute"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProgramTypeAttribute": {
        "required": [
          "attributeName",
          "attributeType"
        ],
        "type": "object",
        "properties": {
          "attributeID": {
            "type": "integer",
            "format": "int32"
          },
          "programTypeID": {
            "type": "integer",
            "format": "int32"
          },
          "attributeName": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "attributeType": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string"
          },
          "isRequired": {
            "type": "boolean"
          },
          "defaultValue": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "dataSource": {
            "maxLength": 200,
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "programType": {
            "$ref": "#/components/schemas/ProgramType"
          }
        },
        "additionalProperties": false
      },
      "ProgramTypeAttributeDto": {
        "type": "object",
        "properties": {
          "attributeID": {
            "type": "integer",
            "format": "int32"
          },
          "programTypeID": {
            "type": "integer",
            "format": "int32"
          },
          "attributeName": {
            "type": "string",
            "nullable": true
          },
          "attributeType": {
            "type": "string",
            "nullable": true
          },
          "isRequired": {
            "type": "boolean"
          },
          "defaultValue": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "dataSource": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ProgramTypeDto": {
        "type": "object",
        "properties": {
          "programTypeID": {
            "type": "integer",
            "format": "int32"
          },
          "typeName": {
            "type": "string",
            "nullable": true
          },
          "typeDescription": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProgramTypeAttributeDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RefreshTokenRequest": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "nullable": true
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RejectMatchRequest": {
        "type": "object",
        "properties": {
          "partsMatchId": {
            "type": "integer",
            "format": "int32"
          },
          "rejectionReason": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Report": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "powerBiReportId": {
            "type": "string",
            "nullable": true
          },
          "webUrl": {
            "type": "string",
            "nullable": true
          },
          "embedUrl": {
            "type": "string",
            "nullable": true
          },
          "reportType": {
            "type": "string",
            "nullable": true
          },
          "datasetId": {
            "type": "string",
            "nullable": true
          },
          "workspaceId": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdById": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedById": {
            "type": "string",
            "nullable": true
          },
          "workspace": {
            "$ref": "#/components/schemas/Workspace"
          },
          "createdBy": {
            "$ref": "#/components/schemas/ApplicationUser"
          },
          "lastUpdatedBy": {
            "$ref": "#/components/schemas/ApplicationUser"
          },
          "reportRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportRole"
            },
            "nullable": true
          },
          "reportUsers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportUser"
            },
            "nullable": true
          },
          "customerReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerReport"
            },
            "nullable": true
          },
          "userFavorites": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserReportFavorite"
            },
            "nullable": true
          },
          "powerBiReportDescription": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReportCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "systemName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "categoryRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportCategoryRole"
            },
            "nullable": true
          },
          "categoryUsers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportCategoryUser"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReportCategoryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "systemName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "assignedRoles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "assignedUserIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReportCategoryRole": {
        "type": "object",
        "properties": {
          "reportCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "roleId": {
            "type": "string",
            "nullable": true
          },
          "reportCategory": {
            "$ref": "#/components/schemas/ReportCategory"
          },
          "role": {
            "$ref": "#/components/schemas/ApplicationRole"
          }
        },
        "additionalProperties": false
      },
      "ReportCategoryUser": {
        "type": "object",
        "properties": {
          "reportCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "reportCategory": {
            "$ref": "#/components/schemas/ReportCategory"
          },
          "user": {
            "$ref": "#/components/schemas/ApplicationUser"
          }
        },
        "additionalProperties": false
      },
      "ReportDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "tenantDisplayName": {
            "type": "string",
            "nullable": true
          },
          "tenantDescription": {
            "type": "string",
            "nullable": true
          },
          "isTenantCustomized": {
            "type": "boolean",
            "nullable": true
          },
          "powerBiReportId": {
            "type": "string",
            "nullable": true
          },
          "powerBiReportDescription": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "webUrl": {
            "type": "string",
            "nullable": true
          },
          "embedUrl": {
            "type": "string",
            "nullable": true
          },
          "reportType": {
            "type": "string",
            "nullable": true
          },
          "datasetId": {
            "type": "string",
            "nullable": true
          },
          "categoryName": {
            "type": "string",
            "nullable": true
          },
          "workspaceId": {
            "type": "integer",
            "format": "int32"
          },
          "workspaceName": {
            "type": "string",
            "nullable": true
          },
          "tenantReportCategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isTenantApproved": {
            "type": "boolean",
            "nullable": true
          },
          "isTenantEnabled": {
            "type": "boolean",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedBy": {
            "type": "string",
            "nullable": true
          },
          "assignedRoles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "assignedUserIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReportImportLogResponseDto": {
        "type": "object",
        "properties": {
          "importLogs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportImportSummaryDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ReportImportSummaryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "importedAt": {
            "type": "string",
            "format": "date-time"
          },
          "importedByUserId": {
            "type": "string",
            "nullable": true
          },
          "importedByUserName": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tenantName": {
            "type": "string",
            "nullable": true
          },
          "workspaceID": {
            "type": "integer",
            "format": "int32"
          },
          "workspaceName": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "processedReports": {
            "type": "integer",
            "format": "int32"
          },
          "newReports": {
            "type": "integer",
            "format": "int32"
          },
          "updatedReports": {
            "type": "integer",
            "format": "int32"
          },
          "deletedReports": {
            "type": "integer",
            "format": "int32"
          },
          "upsertedCustomerReports": {
            "type": "integer",
            "format": "int32"
          },
          "deletedCustomerReports": {
            "type": "integer",
            "format": "int32"
          },
          "errorCount": {
            "type": "integer",
            "format": "int32"
          },
          "duration": {
            "$ref": "#/components/schemas/TimeSpan"
          }
        },
        "additionalProperties": false
      },
      "ReportRole": {
        "type": "object",
        "properties": {
          "reportId": {
            "type": "integer",
            "format": "int32"
          },
          "roleId": {
            "type": "string",
            "nullable": true
          },
          "report": {
            "$ref": "#/components/schemas/Report"
          },
          "role": {
            "$ref": "#/components/schemas/ApplicationRole"
          }
        },
        "additionalProperties": false
      },
      "ReportUser": {
        "type": "object",
        "properties": {
          "reportId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "report": {
            "$ref": "#/components/schemas/Report"
          },
          "user": {
            "$ref": "#/components/schemas/ApplicationUser"
          }
        },
        "additionalProperties": false
      },
      "ResetMatchingDto": {
        "type": "object",
        "properties": {
          "matchingIDs": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "chartOfAccountIDs": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResetPasswordRequest": {
        "type": "object",
        "properties": {
          "newPassword": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RoleDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RolePermission": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "$ref": "#/components/schemas/ApplicationRole"
          },
          "permissionId": {
            "type": "string",
            "nullable": true
          },
          "permission": {
            "$ref": "#/components/schemas/Permission"
          }
        },
        "additionalProperties": false
      },
      "RoleWorkspace": {
        "required": [
          "roleId",
          "workspaceId"
        ],
        "type": "object",
        "properties": {
          "roleId": {
            "minLength": 1,
            "type": "string"
          },
          "role": {
            "$ref": "#/components/schemas/ApplicationRole"
          },
          "workspaceId": {
            "type": "integer",
            "format": "int32"
          },
          "workspace": {
            "$ref": "#/components/schemas/Workspace"
          },
          "assignedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ScheduleConfigDto": {
        "type": "object",
        "properties": {
          "dailyTime": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "weeklyDays": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DayOfWeek"
            },
            "nullable": true
          },
          "weeklyTime": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "monthlyDay": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "monthlyTime": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "lastDayOfMonth": {
            "type": "boolean",
            "nullable": true
          },
          "monthlyWeekOption": {
            "type": "string",
            "nullable": true
          },
          "monthlyDayOfWeek": {
            "$ref": "#/components/schemas/DayOfWeek"
          },
          "timeZone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SetReportStatusRequest": {
        "type": "object",
        "properties": {
          "reportIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Shop": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "businessKey": {
            "type": "string",
            "nullable": true
          },
          "parentID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "businessUnitID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "customerShops": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerShop"
            },
            "nullable": true
          },
          "programShopSubscriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProgramShopSubscription"
            },
            "nullable": true
          },
          "shopUsers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopUser"
            },
            "nullable": true
          },
          "shopKpis": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopKpi"
            },
            "nullable": true
          },
          "shopProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopProperties"
            },
            "nullable": true
          },
          "shopStats": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopStats"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShopAttribute": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "attributeType": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "attributeCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "attributeName": {
            "type": "string",
            "nullable": true
          },
          "attributeUnitId": {
            "type": "integer",
            "format": "int32"
          },
          "validationString": {
            "type": "string",
            "nullable": true
          },
          "rowCreatedBy": {
            "type": "string",
            "nullable": true
          },
          "rowCreatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "rowModifiedBy": {
            "type": "string",
            "nullable": true
          },
          "rowModifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "attributeCategory": {
            "$ref": "#/components/schemas/AttributeCategory"
          },
          "attributeUnit": {
            "$ref": "#/components/schemas/AttributeUnit"
          }
        },
        "additionalProperties": false
      },
      "ShopAttributeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "attributeType": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "attributeCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "attributeCategoryDescription": {
            "type": "string",
            "nullable": true
          },
          "attributeName": {
            "type": "string",
            "nullable": true
          },
          "attributeUnitId": {
            "type": "integer",
            "format": "int32"
          },
          "attributeUnitType": {
            "type": "string",
            "nullable": true
          },
          "attributeUnitIsTable": {
            "type": "boolean"
          },
          "validationString": {
            "type": "string",
            "nullable": true
          },
          "rowCreatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "rowCreatedBy": {
            "type": "string",
            "nullable": true
          },
          "rowModifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "rowModifiedBy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShopChartOfAccountDto": {
        "type": "object",
        "properties": {
          "chartOfAccountsID": {
            "type": "integer",
            "format": "int32"
          },
          "programID": {
            "type": "integer",
            "format": "int32"
          },
          "shopID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "accountName": {
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "accountDescription": {
            "type": "string",
            "nullable": true
          },
          "rowCreatedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "rowCreatedBy": {
            "type": "string",
            "nullable": true
          },
          "effectiveDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "rowModifiedBy": {
            "type": "string",
            "nullable": true
          },
          "rowModifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isMapped": {
            "type": "boolean"
          },
          "masterChartOfAccountID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "matchingConfidence": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "matchingMethod": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "isMasterAccount": {
            "type": "boolean"
          },
          "programName": {
            "type": "string",
            "nullable": true
          },
          "shopName": {
            "type": "string",
            "nullable": true
          },
          "masterAccountName": {
            "type": "string",
            "nullable": true
          },
          "matchingStatus": {
            "type": "string",
            "nullable": true
          },
          "potentialMatches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChartOfAccountMatchDto"
            },
            "nullable": true
          },
          "confirmedMatch": {
            "$ref": "#/components/schemas/ChartOfAccountMatchDto"
          }
        },
        "additionalProperties": false,
        "description": "Simplified DTO for shop chart of accounts - excludes fields that are always null for shop accounts"
      },
      "ShopChartOfAccountResponseDto": {
        "type": "object",
        "properties": {
          "chartOfAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopChartOfAccountDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response DTO for shop chart of accounts"
      },
      "ShopDashboardStatsDto": {
        "type": "object",
        "properties": {
          "shopId": {
            "type": "integer",
            "format": "int32"
          },
          "shopName": {
            "type": "string",
            "nullable": true
          },
          "shopLocation": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalROs": {
            "type": "integer",
            "format": "int32"
          },
          "totalGrossAmount": {
            "type": "number",
            "format": "double"
          },
          "totalNetAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalLabourHours": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalRevenue": {
            "type": "number",
            "format": "double"
          },
          "totalCosts": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "profitMargin": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "averageROValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "labourEfficiency": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalPartsAmount": {
            "type": "number",
            "format": "double"
          },
          "oemPartsPercentage": {
            "type": "number",
            "format": "double"
          },
          "aftermarketPartsPercentage": {
            "type": "number",
            "format": "double"
          },
          "recycledPartsPercentage": {
            "type": "number",
            "format": "double"
          },
          "paintLabourPercentage": {
            "type": "number",
            "format": "double"
          },
          "bodyLabourPercentage": {
            "type": "number",
            "format": "double"
          },
          "mechanicalLabourPercentage": {
            "type": "number",
            "format": "double"
          },
          "frameLabourPercentage": {
            "type": "number",
            "format": "double"
          },
          "topVehicleMakes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VehicleMakeStatsDto"
            },
            "nullable": true
          },
          "lastDataDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "firstDataDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShopDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "businessKey": {
            "type": "string",
            "nullable": true
          },
          "parentID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "businessUnitID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isTenantActive": {
            "type": "boolean"
          },
          "isTenantDeleted": {
            "type": "boolean"
          },
          "tenantAssignedAt": {
            "type": "string",
            "format": "date-time"
          },
          "tenantAssignedBy": {
            "type": "string",
            "nullable": true
          },
          "programNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "assignedUserNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "kpIs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopKpiDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShopKpi": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "shopAttributeId": {
            "type": "integer",
            "format": "int32"
          },
          "shopId": {
            "type": "integer",
            "format": "int32"
          },
          "kpiYear": {
            "type": "integer",
            "format": "int32"
          },
          "kpiMonth": {
            "type": "integer",
            "format": "int32"
          },
          "kpiValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "kpiGoal": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "kpiThreshold": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "rowModifiedBy": {
            "type": "string",
            "nullable": true
          },
          "rowModifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "kpibmsValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "shop": {
            "$ref": "#/components/schemas/Shop"
          },
          "shopAttribute": {
            "$ref": "#/components/schemas/ShopAttribute"
          }
        },
        "additionalProperties": false
      },
      "ShopKpiBulkUpdateItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "kpiValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "kpiGoal": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShopKpiDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "shopAttributeId": {
            "type": "integer",
            "format": "int32"
          },
          "shopId": {
            "type": "integer",
            "format": "int32"
          },
          "kpiYear": {
            "type": "integer",
            "format": "int32"
          },
          "kpiMonth": {
            "type": "integer",
            "format": "int32"
          },
          "kpiValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "kpiGoal": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "kpiThreshold": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "rowModifiedBy": {
            "type": "string",
            "nullable": true
          },
          "rowModifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "kpibmsValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "attributeName": {
            "type": "string",
            "nullable": true
          },
          "attributeCategoryDescription": {
            "type": "string",
            "nullable": true
          },
          "attributeUnitType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShopKpiRecentViewDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "shopAttributeId": {
            "type": "integer",
            "format": "int32"
          },
          "shopId": {
            "type": "integer",
            "format": "int32"
          },
          "kpiYear": {
            "type": "integer",
            "format": "int32"
          },
          "kpiMonth": {
            "type": "integer",
            "format": "int32"
          },
          "kpiValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "kpiGoal": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "kpiThreshold": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "rowModifiedBy": {
            "type": "string",
            "nullable": true
          },
          "rowModifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "kpibmsValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "attributeName": {
            "type": "string",
            "nullable": true
          },
          "categoryDescription": {
            "type": "string",
            "nullable": true
          },
          "unitType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShopProperties": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "shopAttributeId": {
            "type": "integer",
            "format": "int32"
          },
          "shopId": {
            "type": "integer",
            "format": "int32"
          },
          "propertyYear": {
            "type": "integer",
            "format": "int32"
          },
          "propertyMonth": {
            "type": "integer",
            "format": "int32"
          },
          "propertyValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "rowModifiedBy": {
            "type": "string",
            "nullable": true
          },
          "rowModifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "shop": {
            "$ref": "#/components/schemas/Shop"
          },
          "shopAttribute": {
            "$ref": "#/components/schemas/ShopAttribute"
          }
        },
        "additionalProperties": false
      },
      "ShopPropertiesDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "shopAttributeId": {
            "type": "integer",
            "format": "int32"
          },
          "shopId": {
            "type": "integer",
            "format": "int32"
          },
          "propertyYear": {
            "type": "integer",
            "format": "int32"
          },
          "propertyMonth": {
            "type": "integer",
            "format": "int32"
          },
          "propertyValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "rowModifiedBy": {
            "type": "string",
            "nullable": true
          },
          "rowModifiedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "attributeName": {
            "type": "string",
            "nullable": true
          },
          "attributeCategoryDescription": {
            "type": "string",
            "nullable": true
          },
          "attributeUnitType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShopPropertyBulkUpdateItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "propertyValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShopSearchResponseDto": {
        "type": "object",
        "properties": {
          "shops": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ShopStats": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "shopId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "mappedMake": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "numberOfROs": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "grossAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "netAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "repairCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "labourAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "paintLabourAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "bodyLabourAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "frameLabourAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "mechanicalLabourAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "otherLabourAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "labourCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "paintLabourCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "mechanicalLabourCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "otherLabourCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "paintMaterialsAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "materialsAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "paintMaterialsCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "materialsCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "labourHours": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "paintLabourHours": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "bodyLabourHours": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "frameLabourHours": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "otherLabourHours": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "bodyRepairAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "bodyReplaceAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "bodyReplaceHours": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "towing": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "towingCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "partsAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "oemPartsAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "amPartsAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "reconditionedPartsAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "recycledPartsAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "otherPartsAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "partsCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "nonOEMPartsCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "amPartsCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "reconditionedPartsCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "recycledPartsCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "otherPartsCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "hazardousWasteAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "hazardousWasteCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "subletAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "subletCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "otherAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "otherCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "shop": {
            "$ref": "#/components/schemas/Shop"
          }
        },
        "additionalProperties": false
      },
      "ShopStatsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "shopId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "mappedMake": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "numberOfROs": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "grossAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "netAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "repairCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "labourAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "paintLabourAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "bodyLabourAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "frameLabourAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "mechanicalLabourAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "otherLabourAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "labourCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "paintLabourCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "mechanicalLabourCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "otherLabourCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "paintMaterialsAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "materialsAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "paintMaterialsCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "materialsCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "labourHours": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "paintLabourHours": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "bodyLabourHours": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "frameLabourHours": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "otherLabourHours": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "bodyRepairAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "bodyReplaceAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "bodyReplaceHours": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "towing": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "towingCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "partsAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "oemPartsAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "amPartsAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "reconditionedPartsAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "recycledPartsAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "otherPartsAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "partsCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "nonOEMPartsCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "amPartsCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "reconditionedPartsCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "recycledPartsCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "otherPartsCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "hazardousWasteAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "hazardousWasteCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "subletAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "subletCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "otherAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "otherCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShopUser": {
        "type": "object",
        "properties": {
          "shopID": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "assignedAt": {
            "type": "string",
            "format": "date-time"
          },
          "shopRoleId": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "assignedBy": {
            "type": "string",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          },
          "shop": {
            "$ref": "#/components/schemas/Shop"
          },
          "user": {
            "$ref": "#/components/schemas/ApplicationUser"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "shopRole": {
            "$ref": "#/components/schemas/ApplicationRole"
          }
        },
        "additionalProperties": false
      },
      "StagedDataResponseDto": {
        "type": "object",
        "properties": {
          "jobID": {
            "type": "integer",
            "format": "int32"
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "totalRows": {
            "type": "integer",
            "format": "int32"
          },
          "detectedColumns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExcelColumnDto"
            },
            "nullable": true
          },
          "sampleData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StagedRowDataDto"
            },
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response DTO for file staging with column information"
      },
      "StagedRowDataDto": {
        "type": "object",
        "properties": {
          "stagingID": {
            "type": "integer",
            "format": "int32"
          },
          "rowNumber": {
            "type": "integer",
            "format": "int32"
          },
          "columnData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Staged row data for preview"
      },
      "StringListApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "$ref": "#/components/schemas/ApiError"
          }
        },
        "additionalProperties": false
      },
      "SubscriptionDto": {
        "required": [
          "emailBody",
          "emailSubject",
          "name",
          "scheduleConfig",
          "scheduleStartDate",
          "scheduleType"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          },
          "description": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32"
          },
          "tenantName": {
            "type": "string",
            "nullable": true
          },
          "emailSubject": {
            "maxLength": 300,
            "minLength": 0,
            "type": "string"
          },
          "emailBody": {
            "minLength": 1,
            "type": "string"
          },
          "scheduleType": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "scheduleConfig": {
            "$ref": "#/components/schemas/ScheduleConfigDto"
          },
          "scheduleStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "scheduleEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdByUserId": {
            "type": "string",
            "nullable": true
          },
          "createdByUserName": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedByUserId": {
            "type": "string",
            "nullable": true
          },
          "lastUpdatedByUserName": {
            "type": "string",
            "nullable": true
          },
          "lastExecutedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "nextExecutionAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "executionStatus": {
            "type": "string",
            "nullable": true
          },
          "lastExecutionDetails": {
            "type": "string",
            "nullable": true
          },
          "reports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionReportDto"
            },
            "nullable": true
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionUserDto"
            },
            "nullable": true
          },
          "recentExecutions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionExecutionDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubscriptionExecutionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "executedAt": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "details": {
            "type": "string",
            "nullable": true
          },
          "emailsSent": {
            "type": "integer",
            "format": "int32"
          },
          "emailsFailed": {
            "type": "integer",
            "format": "int32"
          },
          "errorDetails": {
            "type": "string",
            "nullable": true
          },
          "executionDuration": {
            "$ref": "#/components/schemas/TimeSpan"
          }
        },
        "additionalProperties": false
      },
      "SubscriptionReportDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "reportId": {
            "type": "integer",
            "format": "int32"
          },
          "reportName": {
            "type": "string",
            "nullable": true
          },
          "reportDescription": {
            "type": "string",
            "nullable": true
          },
          "workspaceName": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "SubscriptionUserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "userEmail": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "TenantAdminDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TenantBrandingDataDto": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "portalDisplayName": {
            "$ref": "#/components/schemas/PortalDisplayNameDto"
          },
          "subtitle": {
            "type": "string",
            "nullable": true
          },
          "assets": {
            "$ref": "#/components/schemas/BrandingAssetsDto"
          },
          "theme": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TenantBrandingResponseDto": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/TenantBrandingDataDto"
          }
        },
        "additionalProperties": false
      },
      "TenantFeatureResponse": {
        "type": "object",
        "properties": {
          "featureId": {
            "type": "string",
            "format": "uuid"
          },
          "featureKey": {
            "type": "string",
            "nullable": true
          },
          "featureName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "menuPath": {
            "type": "string",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean"
          },
          "enabledAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "enabledBy": {
            "$ref": "#/components/schemas/UserSummary"
          },
          "disabledAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "disabledBy": {
            "$ref": "#/components/schemas/UserSummary"
          }
        },
        "additionalProperties": false
      },
      "TenantFeatureResponseApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/TenantFeatureResponse"
          },
          "error": {
            "$ref": "#/components/schemas/ApiError"
          }
        },
        "additionalProperties": false
      },
      "TenantFeatureResponseListApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TenantFeatureResponse"
            },
            "nullable": true
          },
          "error": {
            "$ref": "#/components/schemas/ApiError"
          }
        },
        "additionalProperties": false
      },
      "TenantWithAdminsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "subdomain": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "tenantAdmins": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TenantAdminDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TimeSpan": {
        "type": "object",
        "properties": {
          "ticks": {
            "type": "integer",
            "format": "int64"
          },
          "days": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "hours": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "milliseconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "microseconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "nanoseconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "minutes": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "seconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "totalDays": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalHours": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalMilliseconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalMicroseconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalNanoseconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalMinutes": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalSeconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ToggleEnabledRequest": {
        "type": "object",
        "properties": {
          "isEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ToggleProgramActiveStatusDto": {
        "type": "object",
        "properties": {
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "TopPerformersDto": {
        "type": "object",
        "properties": {
          "shopId": {
            "type": "integer",
            "format": "int32"
          },
          "shopName": {
            "type": "string",
            "nullable": true
          },
          "metricName": {
            "type": "string",
            "nullable": true
          },
          "metricValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "metricUnit": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TrendDataDto": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "roCount": {
            "type": "integer",
            "format": "int32"
          },
          "revenue": {
            "type": "number",
            "format": "double"
          },
          "labourHours": {
            "type": "number",
            "format": "double"
          },
          "profitMargin": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "UpdateAttributeCategoryDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdateAttributeUnitDto": {
        "type": "object",
        "properties": {
          "unitType": {
            "type": "string",
            "nullable": true
          },
          "isTable": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateChartOfAccountDto": {
        "type": "object",
        "properties": {
          "accountName": {
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "accountDescription": {
            "type": "string",
            "nullable": true
          },
          "accountType": {
            "type": "string",
            "nullable": true
          },
          "drCrDefault": {
            "type": "string",
            "nullable": true
          },
          "lineType": {
            "type": "string",
            "nullable": true
          },
          "coASequenceNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "indentLevel": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentCoA": {
            "type": "string",
            "nullable": true
          },
          "effectiveDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateCustomerDto": {
        "required": [
          "name",
          "subdomain"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "subdomain": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "address": {
            "maxLength": 250,
            "type": "string",
            "nullable": true
          },
          "theme": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "legacyBusinessNetworkID": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "portalDisplayName": {
            "maxLength": 200,
            "type": "string",
            "nullable": true
          },
          "portalDisplaySubName": {
            "maxLength": 200,
            "type": "string",
            "nullable": true
          },
          "portalDisplayPageSubTitle": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "portalWindowIcon": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateCustomerReportDto": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isApproved": {
            "type": "boolean",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean",
            "nullable": true
          },
          "reportCategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateCustomerWorkspaceNameAndStatusDto": {
        "required": [
          "isActive"
        ],
        "type": "object",
        "properties": {
          "isActive": {
            "type": "boolean"
          },
          "customerWorkspaceName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateFeatureRequest": {
        "required": [
          "category",
          "featureName"
        ],
        "type": "object",
        "properties": {
          "featureName": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "category": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "menuPath": {
            "maxLength": 300,
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateGeneralLedgerEntryDto": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "entryType": {
            "type": "string",
            "nullable": true
          },
          "entryAmount": {
            "type": "number",
            "format": "double"
          },
          "entryDesc": {
            "type": "string",
            "nullable": true
          },
          "drcrInd": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateMasterPartDto": {
        "type": "object",
        "properties": {
          "manufacturerID": {
            "type": "integer",
            "format": "int32"
          },
          "brandID": {
            "type": "integer",
            "format": "int32"
          },
          "partCategoryID": {
            "type": "integer",
            "format": "int32"
          },
          "partNumber": {
            "type": "string",
            "nullable": true
          },
          "uniqueCode": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "sizeUnitOfSale": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateMatchRequest": {
        "type": "object",
        "properties": {
          "notes": {
            "type": "string",
            "nullable": true
          },
          "rejectionReason": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateProgramCategoryDto": {
        "type": "object",
        "properties": {
          "categoryName": {
            "type": "string",
            "nullable": true
          },
          "categoryDescription": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateProgramDto": {
        "type": "object",
        "properties": {
          "programName": {
            "type": "string",
            "nullable": true
          },
          "programDescription": {
            "type": "string",
            "nullable": true
          },
          "programTypeID": {
            "type": "integer",
            "format": "int32"
          },
          "contactName": {
            "type": "string",
            "nullable": true
          },
          "contactPhone": {
            "type": "string",
            "nullable": true
          },
          "contactEmail": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "typeSpecificAttributes": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateProgramShopSubscriptiontDto": {
        "type": "object",
        "properties": {
          "retroactiveDays": {
            "type": "integer",
            "format": "int32"
          },
          "minWarrantySalesDollars": {
            "type": "number",
            "format": "double"
          },
          "isActive": {
            "type": "boolean"
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "additionalParameters": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateProgramTypeAttributeDto": {
        "type": "object",
        "properties": {
          "attributeName": {
            "type": "string",
            "nullable": true
          },
          "attributeType": {
            "type": "string",
            "nullable": true
          },
          "isRequired": {
            "type": "boolean"
          },
          "defaultValue": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "dataSource": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateProgramTypeDto": {
        "type": "object",
        "properties": {
          "typeName": {
            "type": "string",
            "nullable": true
          },
          "typeDescription": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateRoleDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateShopAttributeDto": {
        "type": "object",
        "properties": {
          "attributeType": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "attributeCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "attributeName": {
            "type": "string",
            "nullable": true
          },
          "attributeUnitId": {
            "type": "integer",
            "format": "int32"
          },
          "validationString": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateShopKpiDto": {
        "type": "object",
        "properties": {
          "kpiYear": {
            "type": "integer",
            "format": "int32"
          },
          "kpiMonth": {
            "type": "integer",
            "format": "int32"
          },
          "kpiValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "kpiGoal": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "kpiThreshold": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "kpibmsValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateShopPropertiesDto": {
        "type": "object",
        "properties": {
          "propertyYear": {
            "type": "integer",
            "format": "int32"
          },
          "propertyMonth": {
            "type": "integer",
            "format": "int32"
          },
          "propertyValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateShopStatsDto": {
        "type": "object",
        "properties": {
          "shopId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "mappedMake": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "numberOfROs": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "grossAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "netAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "repairCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "labourAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "paintLabourAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "bodyLabourAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "frameLabourAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "mechanicalLabourAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "otherLabourAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "labourCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "paintLabourCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "mechanicalLabourCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "otherLabourCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "paintMaterialsAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "materialsAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "paintMaterialsCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "materialsCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "labourHours": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "paintLabourHours": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "bodyLabourHours": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "frameLabourHours": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "otherLabourHours": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "bodyRepairAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "bodyReplaceAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "bodyReplaceHours": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "towing": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "towingCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "partsAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "oemPartsAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "amPartsAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "reconditionedPartsAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "recycledPartsAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "otherPartsAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "partsCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "nonOEMPartsCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "amPartsCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "reconditionedPartsCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "recycledPartsCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "otherPartsCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "hazardousWasteAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "hazardousWasteCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "subletAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "subletCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "otherAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "otherCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateSubscriptionDto": {
        "required": [
          "emailBody",
          "emailSubject",
          "name",
          "reportIds",
          "scheduleConfig",
          "scheduleStartDate",
          "scheduleType",
          "userIds"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          },
          "description": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "emailSubject": {
            "maxLength": 300,
            "minLength": 0,
            "type": "string"
          },
          "emailBody": {
            "minLength": 1,
            "type": "string"
          },
          "scheduleType": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "scheduleConfig": {
            "$ref": "#/components/schemas/ScheduleConfigDto"
          },
          "scheduleStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "scheduleEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "reportIds": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "userIds": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "UpdateTenantWorkspaceNameDto": {
        "required": [
          "workspaceName"
        ],
        "type": "object",
        "properties": {
          "workspaceName": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UpdateUserReportFavoriteDto": {
        "type": "object",
        "properties": {
          "note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserDto"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "isCustomerUser": {
            "type": "boolean"
          },
          "isCCIUser": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastLoginAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UserFavoriteReportsResponseDto": {
        "type": "object",
        "properties": {
          "favoriteReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserReportFavoriteDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserReportFavorite": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "nullable": true
          },
          "reportId": {
            "type": "integer",
            "format": "int32"
          },
          "favoritedAt": {
            "type": "string",
            "format": "date-time"
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/ApplicationUser"
          },
          "report": {
            "$ref": "#/components/schemas/Report"
          }
        },
        "additionalProperties": false
      },
      "UserReportFavoriteDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "nullable": true
          },
          "reportId": {
            "type": "integer",
            "format": "int32"
          },
          "reportName": {
            "type": "string",
            "nullable": true
          },
          "favoritedAt": {
            "type": "string",
            "format": "date-time"
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "reportType": {
            "type": "string",
            "nullable": true
          },
          "webUrl": {
            "type": "string",
            "nullable": true
          },
          "embedUrl": {
            "type": "string",
            "nullable": true
          },
          "powerBiReportDescription": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserSummary": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserWorkspace": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "nullable": true
          },
          "workspaceId": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "assignedAt": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "$ref": "#/components/schemas/ApplicationUser"
          },
          "workspace": {
            "$ref": "#/components/schemas/Workspace"
          }
        },
        "additionalProperties": false
      },
      "ValidateImpersonationTokenRequest": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VariantPartDto": {
        "type": "object",
        "properties": {
          "variantPartId": {
            "type": "integer",
            "format": "int32"
          },
          "distPartNum": {
            "type": "string",
            "nullable": true
          },
          "distPartDesc": {
            "type": "string",
            "nullable": true
          },
          "distUnitOfSale": {
            "type": "string",
            "nullable": true
          },
          "manufacturer": {
            "type": "string",
            "nullable": true
          },
          "manufacturerPartNumb": {
            "type": "string",
            "nullable": true
          },
          "manufacturerUPC": {
            "type": "string",
            "nullable": true
          },
          "manufacturerSKU": {
            "type": "string",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "partMatch": {
            "$ref": "#/components/schemas/PartsMatchDto"
          }
        },
        "additionalProperties": false
      },
      "VariantPartPagedResult": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VariantPartWithMatchDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "hasNextPage": {
            "type": "boolean"
          },
          "hasPreviousPage": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "VariantPartRequest": {
        "type": "object",
        "properties": {
          "distPartNum": {
            "type": "string",
            "nullable": true
          },
          "distPartDesc": {
            "type": "string",
            "nullable": true
          },
          "distUnitOfSale": {
            "type": "string",
            "nullable": true
          },
          "manufacturer": {
            "type": "string",
            "nullable": true
          },
          "manufacturerPartNumb": {
            "type": "string",
            "nullable": true
          },
          "manufacturerUPC": {
            "type": "string",
            "nullable": true
          },
          "manufacturerSKU": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "VariantPartWithMatchDto": {
        "type": "object",
        "properties": {
          "variantPartId": {
            "type": "integer",
            "format": "int32"
          },
          "distPartNum": {
            "type": "string",
            "nullable": true
          },
          "distPartDesc": {
            "type": "string",
            "nullable": true
          },
          "distUnitOfSale": {
            "type": "string",
            "nullable": true
          },
          "manufacturer": {
            "type": "string",
            "nullable": true
          },
          "manufacturerPartNumb": {
            "type": "string",
            "nullable": true
          },
          "manufacturerUPC": {
            "type": "string",
            "nullable": true
          },
          "manufacturerSKU": {
            "type": "string",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "isMatched": {
            "type": "boolean"
          },
          "matchDetails": {
            "$ref": "#/components/schemas/PartsMatchDto"
          },
          "masterPart": {
            "$ref": "#/components/schemas/MasterPartDto"
          }
        },
        "additionalProperties": false
      },
      "VehicleMakeStatsDto": {
        "type": "object",
        "properties": {
          "make": {
            "type": "string",
            "nullable": true
          },
          "roCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "percentage": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Workspace": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "workspaceID": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "systemName": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "isValidated": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "customerWorkspaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerWorkspace"
            },
            "nullable": true
          },
          "userWorkspaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserWorkspace"
            },
            "nullable": true
          },
          "reports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Report"
            },
            "nullable": true
          },
          "roleWorkspaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleWorkspace"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WorkspaceDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "workspaceID": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "systemName": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "isValidated": {
            "type": "boolean"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "tenantSpecificWorkspaceName": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isAssignedToCustomerActive": {
            "type": "boolean",
            "nullable": true
          },
          "reports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportDto"
            },
            "nullable": true
          },
          "lastImport": {
            "$ref": "#/components/schemas/ReportImportSummaryDto"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}