export interface Report {
    id: number;
    name: string;
    originalName: string;
    description?: string;
    powerBiReportId: string;
    categoryName?: string;
    workspaceId: number;
    workspaceName?: string;
    reportCategoryId?: number;
    isApproved: boolean;
    isEnabled: boolean;
    status?: string;
    createdAt: string;
    updatedAt: string;
    createdBy?: string;
    lastUpdatedBy?: string;
    assignedRoles?: string[];
    assignedUserIds?: string[];
}

export interface Workspace {
    id: string; // Database ID
    workspaceID: string; // PowerBI GUID ID - Changed from workspaceId to match API
    name: string;
    systemName?: string;
    description?: string;
    status?: 'ACTIVE' | 'INACTIVE' | 'ARCHIVED'; // This might be redundant if isActive is used
    isActive: boolean;
    isValidated: boolean;
    customerId?: number;
    tenantSpecificWorkspaceName?: string;
    createdAt: string;
    updatedAt: string;
    isAssignedToCustomerActive?: boolean;
    reports?: Report[];
    assignedCustomerIds?: string[];
}

export interface WorkspaceDto extends Workspace {}

export interface CreateWorkspaceDto {
    workspaceID: string; // PowerBI GUID ID - Changed to match API expectation
    name: string;
    systemName?: string; // Added to match API payload structure
    description?: string;
    // status: 'ACTIVE' | 'INACTIVE'; // This might be handled by isActive or set by backend default
    isActive?: boolean; // To control active status on creation, defaults to true if not provided by form
    isValidated?: boolean; // To control validated status on creation, defaults to false if not provided by form
    // id is typically generated by the backend, so it's not part of CreateWorkspaceDto
}

export interface UpdateWorkspaceDto {
    workspaceId?: string;
    name?: string;
    description?: string;
    status?: 'ACTIVE' | 'INACTIVE' | 'ARCHIVED';
    isActive?: boolean;
    isValidated?: boolean;
}

export interface AssignWorkspacesToCustomersDto {
    workspaceIds: string[];
    customerIds: string[];
}

export interface UnassignWorkspacesFromCustomersDto {
    workspaceIds: string[];
    customerIds: string[];
}

export interface UpdateTenantWorkspaceNameDto {
    workspaceName?: string | null;
}

export interface UpdateCustomerWorkspaceNameAndStatusDto {
    isActive: boolean;
    customerWorkspaceName?: string | null;
}

export interface WorkspaceCustomerAssignment {
    workspaceId: string;
    workspaceName: string;
    customerId: string;
    customerName: string;
    assignedAt: string; // ISO date string
    isAssignedToCustomerActive?: boolean; // Whether this workspace is active for this customer
}

// Import reports response types
export interface ImportReportsResponse {
    success: boolean;
    message?: string;
    processedReports: number;
    newReports: number;
    updatedReports: number;
    deletedReports: number;
    errors?: string[];
}

// Last import information from API
export interface LastImport {
    id: number;
    importedAt: string;
    importedByUserId: string;
    importedByUserName: string;
    tenantId: number;
    tenantName: string;
    success: boolean;
    message: string;
    processedReports: number;
    newReports: number;
    updatedReports: number;
    deletedReports: number;
    upsertedCustomerReports: number;
    deletedCustomerReports: number;
    errorCount: number;
    duration: string;
}

// Import status tracking
export interface WorkspaceImportStatus {
    workspaceId: string;
    workspaceName?: string;
    customerWorkspaceName?: string;
    status: 'idle' | 'importing' | 'success' | 'error';
    lastImport?: string;
    response?: ImportReportsResponse;
}

// Duration object from API
export interface Duration {
    ticks: number;
    days: number;
    hours: number;
    milliseconds: number;
    microseconds: number;
    nanoseconds: number;
    minutes: number;
    seconds: number;
    totalDays: number;
    totalHours: number;
    totalMilliseconds: number;
    totalMicroseconds: number;
    totalNanoseconds: number;
    totalMinutes: number;
    totalSeconds: number;
}

// Report Import Log from API
export interface ReportImportLog {
    id: number;
    importedAt: string;
    importedByUserId: string;
    importedByUserName: string;
    tenantId: number;
    tenantName: string;
    workspaceID: number;
    workspaceName: string;
    success: boolean;
    message: string;
    processedReports: number;
    newReports: number;
    updatedReports: number;
    deletedReports: number;
    upsertedCustomerReports: number;
    deletedCustomerReports: number;
    errorCount: number;
    duration: Duration;
}

// Paginated response for import logs
export interface ReportImportLogResponse {
    importLogs: ReportImportLog[];
    totalCount: number;
    pageNumber: number;
    pageSize: number;
    totalPages: number;
}

// Extended workspace interface for UI state
export interface DisplayWorkspace extends WorkspaceDto {
    assignedToTenant?: boolean;
    isAssignedToCustomerActive?: boolean;
    customerWorkspaceName?: string;
    importStatus?: WorkspaceImportStatus;
    lastImport?: LastImport;
}
